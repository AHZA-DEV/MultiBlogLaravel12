{"file_contents":{"README.md":{"content":"# Laravel Blog Application\n\nAplikasi blog modern yang dibangun dengan Laravel 12 dan Bootstrap 5. Fitur lengkap dengan sistem autentikasi berbasis role, dashboard admin, dan blog public yang responsif.\n\n## ✨ Fitur Utama\n\n### 🔐 Sistem Autentikasi\n- Login dan logout dengan validasi\n- Dashboard berbasis role (Admin vs User)\n- Sistem middleware untuk proteksi route\n\n### 👥 Manajemen User dan Role\n- **Admin**: Akses penuh ke semua fitur (Users, Categories, Posts, Tags)\n- **User**: Akses terbatas (Posts dan Tags saja)\n- Dynamic sidebar berdasarkan role\n\n### 📝 Manajemen Blog\n- **Posts**: CRUD artikel dengan editor markdown\n- **Categories**: Kategori artikel dengan slug otomatis\n- **Tags**: System tagging untuk artikel\n- **Views tracking**: Pencatatan jumlah pembaca\n\n### 🌐 Blog Public\n- **Landing page**: Tampilan semua artikel dengan pagination\n- **Detail post**: Artikel lengkap dengan markdown rendering\n- **Related posts**: Artikel terkait berdasarkan kategori\n- **Social sharing**: Tombol share media sosial\n- **Responsive design**: Optimal di semua device\n\n## 🛠️ Teknologi yang Digunakan\n\n- **Backend**: Laravel 12.0 (PHP 8.2+)\n- **Frontend**: Bootstrap 5.3 + Bootstrap Icons\n- **Database**: SQLite (development)\n- **Build Tool**: Vite\n- **Package Manager**: Composer & NPM\n\n## 📋 Persyaratan Sistem\n\n### Local Development\n- PHP 8.2 atau lebih tinggi\n- Composer\n- Node.js & NPM\n- SQLite\n\n### Replit Environment\n- Sudah terinclude semua dependency yang diperlukan\n\n## 🚀 Instalasi\n\n### 1. Clone Repository\n\n```bash\ngit clone https://github.com/username/laravel-blog.git\ncd laravel-blog\n```\n\n### 2. Instalasi untuk Local Development\n\n#### Install PHP Dependencies\n```bash\ncomposer install\n```\n\n#### Install Node Dependencies\n```bash\nnpm install\n```\n\n#### Setup Environment\n```bash\ncp .env.example .env\nphp artisan key:generate\n```\n\n#### Setup Database\n```bash\nphp artisan migrate\nphp artisan db:seed\n```\n\n#### Build Assets\n```bash\nnpm run build\n# atau untuk development\nnpm run dev\n```\n\n#### Jalankan Server\n```bash\nphp artisan serve\n```\n\nAplikasi akan berjalan di `http://localhost:8000`\n\n### 3. Instalasi untuk Replit\n\n1. **Fork/Import** repository ini ke Replit\n2. **Install Node Dependencies**:\n   ```bash\n   npm install\n   ```\n3. **Setup Database**: Buat file database SQLite\n   ```bash\n   touch database/database.sqlite\n   ```\n4. **Run Migrations & Seeding**:\n   ```bash\n   php artisan migrate --seed\n   ```\n5. **Start Application**: Klik tombol \"Run\" atau jalankan workflow yang sudah dikonfigurasi\n\nWorkflow akan otomatis menjalankan Laravel server di port 5000 dengan Vite untuk development. Environment variables sudah dikonfigurasi dalam workflow command.\n\n## 🗄️ Database Seeding\n\nAplikasi include sample data untuk testing:\n\n### Test Accounts\n```\nAdmin:\nEmail: admin@example.com\nPassword: password123\n\nUser: \nEmail: user@example.com  \nPassword: password123\n```\n\n### Sample Content\n- 2 Kategori (Technology, Business)\n- 3 Tags (Web Development, Laravel, Startup)\n- 3 Artikel lengkap dengan konten markdown\n\n### Manual Seeding\n```bash\nphp artisan db:seed --class=UserSeeder\nphp artisan db:seed --class=PostSeeder\n```\n\n## 📖 Cara Penggunaan\n\n### 1. Akses Public Blog\n- Kunjungi `/` untuk melihat semua artikel\n- Klik artikel untuk membaca konten lengkap\n- Gunakan navigasi untuk pindah antar halaman\n\n### 2. Login ke Dashboard\n- Kunjungi `/login`\n- Gunakan kredensial test account\n- Dashboard akan menampilkan menu sesuai role\n\n### 3. Manajemen Konten (Admin)\n- **Users**: Kelola pengguna dan role\n- **Categories**: Buat dan edit kategori\n- **Posts**: Tulis dan publish artikel\n- **Tags**: Kelola tag artikel\n\n### 4. Konten Creation (User)\n- **Posts**: Tulis artikel (perlu approval admin)\n- **Tags**: Buat tag baru\n\n## 🏗️ Struktur Aplikasi\n\n```\n├── app/\n│   ├── Http/Controllers/\n│   │   ├── AuthController.php      # Autentikasi\n│   │   ├── DashboardController.php # Dashboard\n│   │   └── WelcomeController.php   # Public blog\n│   └── Models/\n│       ├── User.php               # User model\n│       ├── Post.php               # Post model\n│       ├── Category.php           # Category model\n│       └── Tag.php                # Tag model\n├── resources/views/\n│   ├── layouts/\n│   │   ├── app.blade.php          # Main layout\n│   │   ├── sidebar.blade.php      # Sidebar component\n│   │   └── navbar.blade.php       # Navbar component\n│   ├── auth/                      # Auth views\n│   ├── dashboard/                 # Dashboard views\n│   ├── post/\n│   │   └── show.blade.php         # Post detail view\n│   └── welcome.blade.php          # Landing page\n└── database/\n    ├── migrations/                # Database migrations\n    └── seeders/                   # Database seeders\n```\n\n## 🔧 Konfigurasi\n\n### Environment Variables Penting\n```env\nAPP_NAME=\"Laravel Blog\"\nAPP_ENV=local\nAPP_DEBUG=true\nAPP_URL=http://localhost:8000\n\nDB_CONNECTION=sqlite\nDB_DATABASE=/path/to/database.sqlite\n```\n\n### Replit Configuration\nWorkflow sudah dikonfigurasi untuk:\n- Menjalankan Laravel server di port 5000\n- Menggunakan Vite untuk asset compilation\n- Environment variables untuk Replit\n\n## 🤝 Kontribusi\n\n1. Fork repository\n2. Create feature branch (`git checkout -b feature/AmazingFeature`)\n3. Commit changes (`git commit -m 'Add some AmazingFeature'`)\n4. Push to branch (`git push origin feature/AmazingFeature`)\n5. Open Pull Request\n\n## 📝 License\n\nDistributed under the MIT License. See `LICENSE` for more information.\n\n## 🐛 Bug Reports\n\nJika menemukan bug atau issue, silakan buat [GitHub Issue](https://github.com/username/laravel-blog/issues) dengan detail:\n- Environment (local/Replit)\n- Steps to reproduce\n- Expected vs actual behavior\n- Screenshots (jika perlu)\n\n## 📞 Support\n\n- GitHub Issues: [https://github.com/username/laravel-blog/issues](https://github.com/username/laravel-blog/issues)\n- Documentation: [README.md](README.md)\n\n---\n\n**Happy Coding! 🚀**","size_bytes":6110},"vite.config.js":{"content":"import { defineConfig } from 'vite';\nimport laravel from 'laravel-vite-plugin';\nimport tailwindcss from '@tailwindcss/vite';\n\nexport default defineConfig({\n    plugins: [\n        laravel({\n            input: ['resources/css/app.css', 'resources/js/app.js'],\n            refresh: true,\n        }),\n        tailwindcss(),\n    ],\n    server: {\n        host: '0.0.0.0',\n        port: 5173,\n        strictPort: true,\n        origin: process.env.APP_URL,\n        hmr: {\n            host: process.env.APP_URL ? new URL(process.env.APP_URL).hostname : 'localhost',\n            protocol: 'wss',\n            clientPort: 443,\n        },\n    },\n});\n","size_bytes":637},"bootstrap/app.php":{"content":"<?php\n\nuse Illuminate\\Foundation\\Application;\nuse Illuminate\\Foundation\\Configuration\\Exceptions;\nuse Illuminate\\Foundation\\Configuration\\Middleware;\n\nreturn Application::configure(basePath: dirname(__DIR__))\n    ->withRouting(\n        web: __DIR__.'/../routes/web.php',\n        commands: __DIR__.'/../routes/console.php',\n        health: '/up',\n    )\n    ->withMiddleware(function (Middleware $middleware): void {\n        $middleware->alias([\n            'role' => \\App\\Http\\Middleware\\RoleMiddleware::class,\n        ]);\n    })\n    ->withExceptions(function (Exceptions $exceptions): void {\n        //\n    })->create();\n","size_bytes":621},"bootstrap/providers.php":{"content":"<?php\n\nreturn [\n    App\\Providers\\AppServiceProvider::class,\n    App\\Providers\\AuthServiceProvider::class,\n];\n","size_bytes":110},"config/app.php":{"content":"<?php\n\nreturn [\n\n    /*\n    |--------------------------------------------------------------------------\n    | Application Name\n    |--------------------------------------------------------------------------\n    |\n    | This value is the name of your application, which will be used when the\n    | framework needs to place the application's name in a notification or\n    | other UI elements where an application name needs to be displayed.\n    |\n    */\n\n    'name' => env('APP_NAME', 'Laravel'),\n\n    /*\n    |--------------------------------------------------------------------------\n    | Application Environment\n    |--------------------------------------------------------------------------\n    |\n    | This value determines the \"environment\" your application is currently\n    | running in. This may determine how you prefer to configure various\n    | services the application utilizes. Set this in your \".env\" file.\n    |\n    */\n\n    'env' => env('APP_ENV', 'production'),\n\n    /*\n    |--------------------------------------------------------------------------\n    | Application Debug Mode\n    |--------------------------------------------------------------------------\n    |\n    | When your application is in debug mode, detailed error messages with\n    | stack traces will be shown on every error that occurs within your\n    | application. If disabled, a simple generic error page is shown.\n    |\n    */\n\n    'debug' => (bool) env('APP_DEBUG', false),\n\n    /*\n    |--------------------------------------------------------------------------\n    | Application URL\n    |--------------------------------------------------------------------------\n    |\n    | This URL is used by the console to properly generate URLs when using\n    | the Artisan command line tool. You should set this to the root of\n    | the application so that it's available within Artisan commands.\n    |\n    */\n\n    'url' => env('APP_URL', 'http://localhost'),\n\n    /*\n    |--------------------------------------------------------------------------\n    | Application Timezone\n    |--------------------------------------------------------------------------\n    |\n    | Here you may specify the default timezone for your application, which\n    | will be used by the PHP date and date-time functions. The timezone\n    | is set to \"UTC\" by default as it is suitable for most use cases.\n    |\n    */\n\n    'timezone' => 'UTC',\n\n    /*\n    |--------------------------------------------------------------------------\n    | Application Locale Configuration\n    |--------------------------------------------------------------------------\n    |\n    | The application locale determines the default locale that will be used\n    | by Laravel's translation / localization methods. This option can be\n    | set to any locale for which you plan to have translation strings.\n    |\n    */\n\n    'locale' => env('APP_LOCALE', 'en'),\n\n    'fallback_locale' => env('APP_FALLBACK_LOCALE', 'en'),\n\n    'faker_locale' => env('APP_FAKER_LOCALE', 'en_US'),\n\n    /*\n    |--------------------------------------------------------------------------\n    | Encryption Key\n    |--------------------------------------------------------------------------\n    |\n    | This key is utilized by Laravel's encryption services and should be set\n    | to a random, 32 character string to ensure that all encrypted values\n    | are secure. You should do this prior to deploying the application.\n    |\n    */\n\n    'cipher' => 'AES-256-CBC',\n\n    'key' => env('APP_KEY'),\n\n    'previous_keys' => [\n        ...array_filter(\n            explode(',', (string) env('APP_PREVIOUS_KEYS', ''))\n        ),\n    ],\n\n    /*\n    |--------------------------------------------------------------------------\n    | Maintenance Mode Driver\n    |--------------------------------------------------------------------------\n    |\n    | These configuration options determine the driver used to determine and\n    | manage Laravel's \"maintenance mode\" status. The \"cache\" driver will\n    | allow maintenance mode to be controlled across multiple machines.\n    |\n    | Supported drivers: \"file\", \"cache\"\n    |\n    */\n\n    'maintenance' => [\n        'driver' => env('APP_MAINTENANCE_DRIVER', 'file'),\n        'store' => env('APP_MAINTENANCE_STORE', 'database'),\n    ],\n\n];\n","size_bytes":4272},"config/auth.php":{"content":"<?php\n\nreturn [\n\n    /*\n    |--------------------------------------------------------------------------\n    | Authentication Defaults\n    |--------------------------------------------------------------------------\n    |\n    | This option defines the default authentication \"guard\" and password\n    | reset \"broker\" for your application. You may change these values\n    | as required, but they're a perfect start for most applications.\n    |\n    */\n\n    'defaults' => [\n        'guard' => env('AUTH_GUARD', 'web'),\n        'passwords' => env('AUTH_PASSWORD_BROKER', 'users'),\n    ],\n\n    /*\n    |--------------------------------------------------------------------------\n    | Authentication Guards\n    |--------------------------------------------------------------------------\n    |\n    | Next, you may define every authentication guard for your application.\n    | Of course, a great default configuration has been defined for you\n    | which utilizes session storage plus the Eloquent user provider.\n    |\n    | All authentication guards have a user provider, which defines how the\n    | users are actually retrieved out of your database or other storage\n    | system used by the application. Typically, Eloquent is utilized.\n    |\n    | Supported: \"session\"\n    |\n    */\n\n    'guards' => [\n        'web' => [\n            'driver' => 'session',\n            'provider' => 'users',\n        ],\n    ],\n\n    /*\n    |--------------------------------------------------------------------------\n    | User Providers\n    |--------------------------------------------------------------------------\n    |\n    | All authentication guards have a user provider, which defines how the\n    | users are actually retrieved out of your database or other storage\n    | system used by the application. Typically, Eloquent is utilized.\n    |\n    | If you have multiple user tables or models you may configure multiple\n    | providers to represent the model / table. These providers may then\n    | be assigned to any extra authentication guards you have defined.\n    |\n    | Supported: \"database\", \"eloquent\"\n    |\n    */\n\n    'providers' => [\n        'users' => [\n            'driver' => 'eloquent',\n            'model' => env('AUTH_MODEL', App\\Models\\User::class),\n        ],\n\n        // 'users' => [\n        //     'driver' => 'database',\n        //     'table' => 'users',\n        // ],\n    ],\n\n    /*\n    |--------------------------------------------------------------------------\n    | Resetting Passwords\n    |--------------------------------------------------------------------------\n    |\n    | These configuration options specify the behavior of Laravel's password\n    | reset functionality, including the table utilized for token storage\n    | and the user provider that is invoked to actually retrieve users.\n    |\n    | The expiry time is the number of minutes that each reset token will be\n    | considered valid. This security feature keeps tokens short-lived so\n    | they have less time to be guessed. You may change this as needed.\n    |\n    | The throttle setting is the number of seconds a user must wait before\n    | generating more password reset tokens. This prevents the user from\n    | quickly generating a very large amount of password reset tokens.\n    |\n    */\n\n    'passwords' => [\n        'users' => [\n            'provider' => 'users',\n            'table' => env('AUTH_PASSWORD_RESET_TOKEN_TABLE', 'password_reset_tokens'),\n            'expire' => 60,\n            'throttle' => 60,\n        ],\n    ],\n\n    /*\n    |--------------------------------------------------------------------------\n    | Password Confirmation Timeout\n    |--------------------------------------------------------------------------\n    |\n    | Here you may define the number of seconds before a password confirmation\n    | window expires and users are asked to re-enter their password via the\n    | confirmation screen. By default, the timeout lasts for three hours.\n    |\n    */\n\n    'password_timeout' => env('AUTH_PASSWORD_TIMEOUT', 10800),\n\n];\n","size_bytes":4029},"config/cache.php":{"content":"<?php\n\nuse Illuminate\\Support\\Str;\n\nreturn [\n\n    /*\n    |--------------------------------------------------------------------------\n    | Default Cache Store\n    |--------------------------------------------------------------------------\n    |\n    | This option controls the default cache store that will be used by the\n    | framework. This connection is utilized if another isn't explicitly\n    | specified when running a cache operation inside the application.\n    |\n    */\n\n    'default' => env('CACHE_STORE', 'database'),\n\n    /*\n    |--------------------------------------------------------------------------\n    | Cache Stores\n    |--------------------------------------------------------------------------\n    |\n    | Here you may define all of the cache \"stores\" for your application as\n    | well as their drivers. You may even define multiple stores for the\n    | same cache driver to group types of items stored in your caches.\n    |\n    | Supported drivers: \"array\", \"database\", \"file\", \"memcached\",\n    |                    \"redis\", \"dynamodb\", \"octane\", \"null\"\n    |\n    */\n\n    'stores' => [\n\n        'array' => [\n            'driver' => 'array',\n            'serialize' => false,\n        ],\n\n        'database' => [\n            'driver' => 'database',\n            'connection' => env('DB_CACHE_CONNECTION'),\n            'table' => env('DB_CACHE_TABLE', 'cache'),\n            'lock_connection' => env('DB_CACHE_LOCK_CONNECTION'),\n            'lock_table' => env('DB_CACHE_LOCK_TABLE'),\n        ],\n\n        'file' => [\n            'driver' => 'file',\n            'path' => storage_path('framework/cache/data'),\n            'lock_path' => storage_path('framework/cache/data'),\n        ],\n\n        'memcached' => [\n            'driver' => 'memcached',\n            'persistent_id' => env('MEMCACHED_PERSISTENT_ID'),\n            'sasl' => [\n                env('MEMCACHED_USERNAME'),\n                env('MEMCACHED_PASSWORD'),\n            ],\n            'options' => [\n                // Memcached::OPT_CONNECT_TIMEOUT => 2000,\n            ],\n            'servers' => [\n                [\n                    'host' => env('MEMCACHED_HOST', '127.0.0.1'),\n                    'port' => env('MEMCACHED_PORT', 11211),\n                    'weight' => 100,\n                ],\n            ],\n        ],\n\n        'redis' => [\n            'driver' => 'redis',\n            'connection' => env('REDIS_CACHE_CONNECTION', 'cache'),\n            'lock_connection' => env('REDIS_CACHE_LOCK_CONNECTION', 'default'),\n        ],\n\n        'dynamodb' => [\n            'driver' => 'dynamodb',\n            'key' => env('AWS_ACCESS_KEY_ID'),\n            'secret' => env('AWS_SECRET_ACCESS_KEY'),\n            'region' => env('AWS_DEFAULT_REGION', 'us-east-1'),\n            'table' => env('DYNAMODB_CACHE_TABLE', 'cache'),\n            'endpoint' => env('DYNAMODB_ENDPOINT'),\n        ],\n\n        'octane' => [\n            'driver' => 'octane',\n        ],\n\n    ],\n\n    /*\n    |--------------------------------------------------------------------------\n    | Cache Key Prefix\n    |--------------------------------------------------------------------------\n    |\n    | When utilizing the APC, database, memcached, Redis, and DynamoDB cache\n    | stores, there might be other applications using the same cache. For\n    | that reason, you may prefix every cache key to avoid collisions.\n    |\n    */\n\n    'prefix' => env('CACHE_PREFIX', Str::slug((string) env('APP_NAME', 'laravel')).'-cache-'),\n\n];\n","size_bytes":3480},"config/database.php":{"content":"<?php\n\nuse Illuminate\\Support\\Str;\n\nreturn [\n\n    /*\n    |--------------------------------------------------------------------------\n    | Default Database Connection Name\n    |--------------------------------------------------------------------------\n    |\n    | Here you may specify which of the database connections below you wish\n    | to use as your default connection for database operations. This is\n    | the connection which will be utilized unless another connection\n    | is explicitly specified when you execute a query / statement.\n    |\n    */\n\n    'default' => env('DB_CONNECTION', 'sqlite'),\n\n    /*\n    |--------------------------------------------------------------------------\n    | Database Connections\n    |--------------------------------------------------------------------------\n    |\n    | Below are all of the database connections defined for your application.\n    | An example configuration is provided for each database system which\n    | is supported by Laravel. You're free to add / remove connections.\n    |\n    */\n\n    'connections' => [\n\n        'sqlite' => [\n            'driver' => 'sqlite',\n            'url' => env('DB_URL'),\n            'database' => env('DB_DATABASE', database_path('database.sqlite')),\n            'prefix' => '',\n            'foreign_key_constraints' => env('DB_FOREIGN_KEYS', true),\n            'busy_timeout' => null,\n            'journal_mode' => null,\n            'synchronous' => null,\n            'transaction_mode' => 'DEFERRED',\n        ],\n\n        'mysql' => [\n            'driver' => 'mysql',\n            'url' => env('DB_URL'),\n            'host' => env('DB_HOST', '127.0.0.1'),\n            'port' => env('DB_PORT', '3306'),\n            'database' => env('DB_DATABASE', 'laravel'),\n            'username' => env('DB_USERNAME', 'root'),\n            'password' => env('DB_PASSWORD', ''),\n            'unix_socket' => env('DB_SOCKET', ''),\n            'charset' => env('DB_CHARSET', 'utf8mb4'),\n            'collation' => env('DB_COLLATION', 'utf8mb4_unicode_ci'),\n            'prefix' => '',\n            'prefix_indexes' => true,\n            'strict' => true,\n            'engine' => null,\n            'options' => extension_loaded('pdo_mysql') ? array_filter([\n                PDO::MYSQL_ATTR_SSL_CA => env('MYSQL_ATTR_SSL_CA'),\n            ]) : [],\n        ],\n\n        'mariadb' => [\n            'driver' => 'mariadb',\n            'url' => env('DB_URL'),\n            'host' => env('DB_HOST', '127.0.0.1'),\n            'port' => env('DB_PORT', '3306'),\n            'database' => env('DB_DATABASE', 'laravel'),\n            'username' => env('DB_USERNAME', 'root'),\n            'password' => env('DB_PASSWORD', ''),\n            'unix_socket' => env('DB_SOCKET', ''),\n            'charset' => env('DB_CHARSET', 'utf8mb4'),\n            'collation' => env('DB_COLLATION', 'utf8mb4_unicode_ci'),\n            'prefix' => '',\n            'prefix_indexes' => true,\n            'strict' => true,\n            'engine' => null,\n            'options' => extension_loaded('pdo_mysql') ? array_filter([\n                PDO::MYSQL_ATTR_SSL_CA => env('MYSQL_ATTR_SSL_CA'),\n            ]) : [],\n        ],\n\n        'pgsql' => [\n            'driver' => 'pgsql',\n            'url' => env('DB_URL'),\n            'host' => env('DB_HOST', '127.0.0.1'),\n            'port' => env('DB_PORT', '5432'),\n            'database' => env('DB_DATABASE', 'laravel'),\n            'username' => env('DB_USERNAME', 'root'),\n            'password' => env('DB_PASSWORD', ''),\n            'charset' => env('DB_CHARSET', 'utf8'),\n            'prefix' => '',\n            'prefix_indexes' => true,\n            'search_path' => 'public',\n            'sslmode' => 'prefer',\n        ],\n\n        'sqlsrv' => [\n            'driver' => 'sqlsrv',\n            'url' => env('DB_URL'),\n            'host' => env('DB_HOST', 'localhost'),\n            'port' => env('DB_PORT', '1433'),\n            'database' => env('DB_DATABASE', 'laravel'),\n            'username' => env('DB_USERNAME', 'root'),\n            'password' => env('DB_PASSWORD', ''),\n            'charset' => env('DB_CHARSET', 'utf8'),\n            'prefix' => '',\n            'prefix_indexes' => true,\n            // 'encrypt' => env('DB_ENCRYPT', 'yes'),\n            // 'trust_server_certificate' => env('DB_TRUST_SERVER_CERTIFICATE', 'false'),\n        ],\n\n    ],\n\n    /*\n    |--------------------------------------------------------------------------\n    | Migration Repository Table\n    |--------------------------------------------------------------------------\n    |\n    | This table keeps track of all the migrations that have already run for\n    | your application. Using this information, we can determine which of\n    | the migrations on disk haven't actually been run on the database.\n    |\n    */\n\n    'migrations' => [\n        'table' => 'migrations',\n        'update_date_on_publish' => true,\n    ],\n\n    /*\n    |--------------------------------------------------------------------------\n    | Redis Databases\n    |--------------------------------------------------------------------------\n    |\n    | Redis is an open source, fast, and advanced key-value store that also\n    | provides a richer body of commands than a typical key-value system\n    | such as Memcached. You may define your connection settings here.\n    |\n    */\n\n    'redis' => [\n\n        'client' => env('REDIS_CLIENT', 'phpredis'),\n\n        'options' => [\n            'cluster' => env('REDIS_CLUSTER', 'redis'),\n            'prefix' => env('REDIS_PREFIX', Str::slug((string) env('APP_NAME', 'laravel')).'-database-'),\n            'persistent' => env('REDIS_PERSISTENT', false),\n        ],\n\n        'default' => [\n            'url' => env('REDIS_URL'),\n            'host' => env('REDIS_HOST', '127.0.0.1'),\n            'username' => env('REDIS_USERNAME'),\n            'password' => env('REDIS_PASSWORD'),\n            'port' => env('REDIS_PORT', '6379'),\n            'database' => env('REDIS_DB', '0'),\n            'max_retries' => env('REDIS_MAX_RETRIES', 3),\n            'backoff_algorithm' => env('REDIS_BACKOFF_ALGORITHM', 'decorrelated_jitter'),\n            'backoff_base' => env('REDIS_BACKOFF_BASE', 100),\n            'backoff_cap' => env('REDIS_BACKOFF_CAP', 1000),\n        ],\n\n        'cache' => [\n            'url' => env('REDIS_URL'),\n            'host' => env('REDIS_HOST', '127.0.0.1'),\n            'username' => env('REDIS_USERNAME'),\n            'password' => env('REDIS_PASSWORD'),\n            'port' => env('REDIS_PORT', '6379'),\n            'database' => env('REDIS_CACHE_DB', '1'),\n            'max_retries' => env('REDIS_MAX_RETRIES', 3),\n            'backoff_algorithm' => env('REDIS_BACKOFF_ALGORITHM', 'decorrelated_jitter'),\n            'backoff_base' => env('REDIS_BACKOFF_BASE', 100),\n            'backoff_cap' => env('REDIS_BACKOFF_CAP', 1000),\n        ],\n\n    ],\n\n];\n","size_bytes":6850},"config/filesystems.php":{"content":"<?php\n\nreturn [\n\n    /*\n    |--------------------------------------------------------------------------\n    | Default Filesystem Disk\n    |--------------------------------------------------------------------------\n    |\n    | Here you may specify the default filesystem disk that should be used\n    | by the framework. The \"local\" disk, as well as a variety of cloud\n    | based disks are available to your application for file storage.\n    |\n    */\n\n    'default' => env('FILESYSTEM_DISK', 'local'),\n\n    /*\n    |--------------------------------------------------------------------------\n    | Filesystem Disks\n    |--------------------------------------------------------------------------\n    |\n    | Below you may configure as many filesystem disks as necessary, and you\n    | may even configure multiple disks for the same driver. Examples for\n    | most supported storage drivers are configured here for reference.\n    |\n    | Supported drivers: \"local\", \"ftp\", \"sftp\", \"s3\"\n    |\n    */\n\n    'disks' => [\n\n        'local' => [\n            'driver' => 'local',\n            'root' => storage_path('app/private'),\n            'serve' => true,\n            'throw' => false,\n            'report' => false,\n        ],\n\n        'public' => [\n            'driver' => 'local',\n            'root' => storage_path('app/public'),\n            'url' => env('APP_URL').'/storage',\n            'visibility' => 'public',\n            'throw' => false,\n            'report' => false,\n        ],\n\n        's3' => [\n            'driver' => 's3',\n            'key' => env('AWS_ACCESS_KEY_ID'),\n            'secret' => env('AWS_SECRET_ACCESS_KEY'),\n            'region' => env('AWS_DEFAULT_REGION'),\n            'bucket' => env('AWS_BUCKET'),\n            'url' => env('AWS_URL'),\n            'endpoint' => env('AWS_ENDPOINT'),\n            'use_path_style_endpoint' => env('AWS_USE_PATH_STYLE_ENDPOINT', false),\n            'throw' => false,\n            'report' => false,\n        ],\n\n    ],\n\n    /*\n    |--------------------------------------------------------------------------\n    | Symbolic Links\n    |--------------------------------------------------------------------------\n    |\n    | Here you may configure the symbolic links that will be created when the\n    | `storage:link` Artisan command is executed. The array keys should be\n    | the locations of the links and the values should be their targets.\n    |\n    */\n\n    'links' => [\n        public_path('storage') => storage_path('app/public'),\n    ],\n\n];\n","size_bytes":2500},"config/logging.php":{"content":"<?php\n\nuse Monolog\\Handler\\NullHandler;\nuse Monolog\\Handler\\StreamHandler;\nuse Monolog\\Handler\\SyslogUdpHandler;\nuse Monolog\\Processor\\PsrLogMessageProcessor;\n\nreturn [\n\n    /*\n    |--------------------------------------------------------------------------\n    | Default Log Channel\n    |--------------------------------------------------------------------------\n    |\n    | This option defines the default log channel that is utilized to write\n    | messages to your logs. The value provided here should match one of\n    | the channels present in the list of \"channels\" configured below.\n    |\n    */\n\n    'default' => env('LOG_CHANNEL', 'stack'),\n\n    /*\n    |--------------------------------------------------------------------------\n    | Deprecations Log Channel\n    |--------------------------------------------------------------------------\n    |\n    | This option controls the log channel that should be used to log warnings\n    | regarding deprecated PHP and library features. This allows you to get\n    | your application ready for upcoming major versions of dependencies.\n    |\n    */\n\n    'deprecations' => [\n        'channel' => env('LOG_DEPRECATIONS_CHANNEL', 'null'),\n        'trace' => env('LOG_DEPRECATIONS_TRACE', false),\n    ],\n\n    /*\n    |--------------------------------------------------------------------------\n    | Log Channels\n    |--------------------------------------------------------------------------\n    |\n    | Here you may configure the log channels for your application. Laravel\n    | utilizes the Monolog PHP logging library, which includes a variety\n    | of powerful log handlers and formatters that you're free to use.\n    |\n    | Available drivers: \"single\", \"daily\", \"slack\", \"syslog\",\n    |                    \"errorlog\", \"monolog\", \"custom\", \"stack\"\n    |\n    */\n\n    'channels' => [\n\n        'stack' => [\n            'driver' => 'stack',\n            'channels' => explode(',', (string) env('LOG_STACK', 'single')),\n            'ignore_exceptions' => false,\n        ],\n\n        'single' => [\n            'driver' => 'single',\n            'path' => storage_path('logs/laravel.log'),\n            'level' => env('LOG_LEVEL', 'debug'),\n            'replace_placeholders' => true,\n        ],\n\n        'daily' => [\n            'driver' => 'daily',\n            'path' => storage_path('logs/laravel.log'),\n            'level' => env('LOG_LEVEL', 'debug'),\n            'days' => env('LOG_DAILY_DAYS', 14),\n            'replace_placeholders' => true,\n        ],\n\n        'slack' => [\n            'driver' => 'slack',\n            'url' => env('LOG_SLACK_WEBHOOK_URL'),\n            'username' => env('LOG_SLACK_USERNAME', 'Laravel Log'),\n            'emoji' => env('LOG_SLACK_EMOJI', ':boom:'),\n            'level' => env('LOG_LEVEL', 'critical'),\n            'replace_placeholders' => true,\n        ],\n\n        'papertrail' => [\n            'driver' => 'monolog',\n            'level' => env('LOG_LEVEL', 'debug'),\n            'handler' => env('LOG_PAPERTRAIL_HANDLER', SyslogUdpHandler::class),\n            'handler_with' => [\n                'host' => env('PAPERTRAIL_URL'),\n                'port' => env('PAPERTRAIL_PORT'),\n                'connectionString' => 'tls://'.env('PAPERTRAIL_URL').':'.env('PAPERTRAIL_PORT'),\n            ],\n            'processors' => [PsrLogMessageProcessor::class],\n        ],\n\n        'stderr' => [\n            'driver' => 'monolog',\n            'level' => env('LOG_LEVEL', 'debug'),\n            'handler' => StreamHandler::class,\n            'handler_with' => [\n                'stream' => 'php://stderr',\n            ],\n            'formatter' => env('LOG_STDERR_FORMATTER'),\n            'processors' => [PsrLogMessageProcessor::class],\n        ],\n\n        'syslog' => [\n            'driver' => 'syslog',\n            'level' => env('LOG_LEVEL', 'debug'),\n            'facility' => env('LOG_SYSLOG_FACILITY', LOG_USER),\n            'replace_placeholders' => true,\n        ],\n\n        'errorlog' => [\n            'driver' => 'errorlog',\n            'level' => env('LOG_LEVEL', 'debug'),\n            'replace_placeholders' => true,\n        ],\n\n        'null' => [\n            'driver' => 'monolog',\n            'handler' => NullHandler::class,\n        ],\n\n        'emergency' => [\n            'path' => storage_path('logs/laravel.log'),\n        ],\n\n    ],\n\n];\n","size_bytes":4327},"config/mail.php":{"content":"<?php\n\nreturn [\n\n    /*\n    |--------------------------------------------------------------------------\n    | Default Mailer\n    |--------------------------------------------------------------------------\n    |\n    | This option controls the default mailer that is used to send all email\n    | messages unless another mailer is explicitly specified when sending\n    | the message. All additional mailers can be configured within the\n    | \"mailers\" array. Examples of each type of mailer are provided.\n    |\n    */\n\n    'default' => env('MAIL_MAILER', 'log'),\n\n    /*\n    |--------------------------------------------------------------------------\n    | Mailer Configurations\n    |--------------------------------------------------------------------------\n    |\n    | Here you may configure all of the mailers used by your application plus\n    | their respective settings. Several examples have been configured for\n    | you and you are free to add your own as your application requires.\n    |\n    | Laravel supports a variety of mail \"transport\" drivers that can be used\n    | when delivering an email. You may specify which one you're using for\n    | your mailers below. You may also add additional mailers if needed.\n    |\n    | Supported: \"smtp\", \"sendmail\", \"mailgun\", \"ses\", \"ses-v2\",\n    |            \"postmark\", \"resend\", \"log\", \"array\",\n    |            \"failover\", \"roundrobin\"\n    |\n    */\n\n    'mailers' => [\n\n        'smtp' => [\n            'transport' => 'smtp',\n            'scheme' => env('MAIL_SCHEME'),\n            'url' => env('MAIL_URL'),\n            'host' => env('MAIL_HOST', '127.0.0.1'),\n            'port' => env('MAIL_PORT', 2525),\n            'username' => env('MAIL_USERNAME'),\n            'password' => env('MAIL_PASSWORD'),\n            'timeout' => null,\n            'local_domain' => env('MAIL_EHLO_DOMAIN', parse_url((string) env('APP_URL', 'http://localhost'), PHP_URL_HOST)),\n        ],\n\n        'ses' => [\n            'transport' => 'ses',\n        ],\n\n        'postmark' => [\n            'transport' => 'postmark',\n            // 'message_stream_id' => env('POSTMARK_MESSAGE_STREAM_ID'),\n            // 'client' => [\n            //     'timeout' => 5,\n            // ],\n        ],\n\n        'resend' => [\n            'transport' => 'resend',\n        ],\n\n        'sendmail' => [\n            'transport' => 'sendmail',\n            'path' => env('MAIL_SENDMAIL_PATH', '/usr/sbin/sendmail -bs -i'),\n        ],\n\n        'log' => [\n            'transport' => 'log',\n            'channel' => env('MAIL_LOG_CHANNEL'),\n        ],\n\n        'array' => [\n            'transport' => 'array',\n        ],\n\n        'failover' => [\n            'transport' => 'failover',\n            'mailers' => [\n                'smtp',\n                'log',\n            ],\n            'retry_after' => 60,\n        ],\n\n        'roundrobin' => [\n            'transport' => 'roundrobin',\n            'mailers' => [\n                'ses',\n                'postmark',\n            ],\n            'retry_after' => 60,\n        ],\n\n    ],\n\n    /*\n    |--------------------------------------------------------------------------\n    | Global \"From\" Address\n    |--------------------------------------------------------------------------\n    |\n    | You may wish for all emails sent by your application to be sent from\n    | the same address. Here you may specify a name and address that is\n    | used globally for all emails that are sent by your application.\n    |\n    */\n\n    'from' => [\n        'address' => env('MAIL_FROM_ADDRESS', 'hello@example.com'),\n        'name' => env('MAIL_FROM_NAME', 'Example'),\n    ],\n\n];\n","size_bytes":3614},"config/queue.php":{"content":"<?php\n\nreturn [\n\n    /*\n    |--------------------------------------------------------------------------\n    | Default Queue Connection Name\n    |--------------------------------------------------------------------------\n    |\n    | Laravel's queue supports a variety of backends via a single, unified\n    | API, giving you convenient access to each backend using identical\n    | syntax for each. The default queue connection is defined below.\n    |\n    */\n\n    'default' => env('QUEUE_CONNECTION', 'database'),\n\n    /*\n    |--------------------------------------------------------------------------\n    | Queue Connections\n    |--------------------------------------------------------------------------\n    |\n    | Here you may configure the connection options for every queue backend\n    | used by your application. An example configuration is provided for\n    | each backend supported by Laravel. You're also free to add more.\n    |\n    | Drivers: \"sync\", \"database\", \"beanstalkd\", \"sqs\", \"redis\", \"null\"\n    |\n    */\n\n    'connections' => [\n\n        'sync' => [\n            'driver' => 'sync',\n        ],\n\n        'database' => [\n            'driver' => 'database',\n            'connection' => env('DB_QUEUE_CONNECTION'),\n            'table' => env('DB_QUEUE_TABLE', 'jobs'),\n            'queue' => env('DB_QUEUE', 'default'),\n            'retry_after' => (int) env('DB_QUEUE_RETRY_AFTER', 90),\n            'after_commit' => false,\n        ],\n\n        'beanstalkd' => [\n            'driver' => 'beanstalkd',\n            'host' => env('BEANSTALKD_QUEUE_HOST', 'localhost'),\n            'queue' => env('BEANSTALKD_QUEUE', 'default'),\n            'retry_after' => (int) env('BEANSTALKD_QUEUE_RETRY_AFTER', 90),\n            'block_for' => 0,\n            'after_commit' => false,\n        ],\n\n        'sqs' => [\n            'driver' => 'sqs',\n            'key' => env('AWS_ACCESS_KEY_ID'),\n            'secret' => env('AWS_SECRET_ACCESS_KEY'),\n            'prefix' => env('SQS_PREFIX', 'https://sqs.us-east-1.amazonaws.com/your-account-id'),\n            'queue' => env('SQS_QUEUE', 'default'),\n            'suffix' => env('SQS_SUFFIX'),\n            'region' => env('AWS_DEFAULT_REGION', 'us-east-1'),\n            'after_commit' => false,\n        ],\n\n        'redis' => [\n            'driver' => 'redis',\n            'connection' => env('REDIS_QUEUE_CONNECTION', 'default'),\n            'queue' => env('REDIS_QUEUE', 'default'),\n            'retry_after' => (int) env('REDIS_QUEUE_RETRY_AFTER', 90),\n            'block_for' => null,\n            'after_commit' => false,\n        ],\n\n    ],\n\n    /*\n    |--------------------------------------------------------------------------\n    | Job Batching\n    |--------------------------------------------------------------------------\n    |\n    | The following options configure the database and table that store job\n    | batching information. These options can be updated to any database\n    | connection and table which has been defined by your application.\n    |\n    */\n\n    'batching' => [\n        'database' => env('DB_CONNECTION', 'sqlite'),\n        'table' => 'job_batches',\n    ],\n\n    /*\n    |--------------------------------------------------------------------------\n    | Failed Queue Jobs\n    |--------------------------------------------------------------------------\n    |\n    | These options configure the behavior of failed queue job logging so you\n    | can control how and where failed jobs are stored. Laravel ships with\n    | support for storing failed jobs in a simple file or in a database.\n    |\n    | Supported drivers: \"database-uuids\", \"dynamodb\", \"file\", \"null\"\n    |\n    */\n\n    'failed' => [\n        'driver' => env('QUEUE_FAILED_DRIVER', 'database-uuids'),\n        'database' => env('DB_CONNECTION', 'sqlite'),\n        'table' => 'failed_jobs',\n    ],\n\n];\n","size_bytes":3824},"config/services.php":{"content":"<?php\n\nreturn [\n\n    /*\n    |--------------------------------------------------------------------------\n    | Third Party Services\n    |--------------------------------------------------------------------------\n    |\n    | This file is for storing the credentials for third party services such\n    | as Mailgun, Postmark, AWS and more. This file provides the de facto\n    | location for this type of information, allowing packages to have\n    | a conventional file to locate the various service credentials.\n    |\n    */\n\n    'postmark' => [\n        'token' => env('POSTMARK_TOKEN'),\n    ],\n\n    'resend' => [\n        'key' => env('RESEND_KEY'),\n    ],\n\n    'ses' => [\n        'key' => env('AWS_ACCESS_KEY_ID'),\n        'secret' => env('AWS_SECRET_ACCESS_KEY'),\n        'region' => env('AWS_DEFAULT_REGION', 'us-east-1'),\n    ],\n\n    'slack' => [\n        'notifications' => [\n            'bot_user_oauth_token' => env('SLACK_BOT_USER_OAUTH_TOKEN'),\n            'channel' => env('SLACK_BOT_USER_DEFAULT_CHANNEL'),\n        ],\n    ],\n\n];\n","size_bytes":1035},"config/session.php":{"content":"<?php\n\nuse Illuminate\\Support\\Str;\n\nreturn [\n\n    /*\n    |--------------------------------------------------------------------------\n    | Default Session Driver\n    |--------------------------------------------------------------------------\n    |\n    | This option determines the default session driver that is utilized for\n    | incoming requests. Laravel supports a variety of storage options to\n    | persist session data. Database storage is a great default choice.\n    |\n    | Supported: \"file\", \"cookie\", \"database\", \"memcached\",\n    |            \"redis\", \"dynamodb\", \"array\"\n    |\n    */\n\n    'driver' => env('SESSION_DRIVER', 'database'),\n\n    /*\n    |--------------------------------------------------------------------------\n    | Session Lifetime\n    |--------------------------------------------------------------------------\n    |\n    | Here you may specify the number of minutes that you wish the session\n    | to be allowed to remain idle before it expires. If you want them\n    | to expire immediately when the browser is closed then you may\n    | indicate that via the expire_on_close configuration option.\n    |\n    */\n\n    'lifetime' => (int) env('SESSION_LIFETIME', 120),\n\n    'expire_on_close' => env('SESSION_EXPIRE_ON_CLOSE', false),\n\n    /*\n    |--------------------------------------------------------------------------\n    | Session Encryption\n    |--------------------------------------------------------------------------\n    |\n    | This option allows you to easily specify that all of your session data\n    | should be encrypted before it's stored. All encryption is performed\n    | automatically by Laravel and you may use the session like normal.\n    |\n    */\n\n    'encrypt' => env('SESSION_ENCRYPT', false),\n\n    /*\n    |--------------------------------------------------------------------------\n    | Session File Location\n    |--------------------------------------------------------------------------\n    |\n    | When utilizing the \"file\" session driver, the session files are placed\n    | on disk. The default storage location is defined here; however, you\n    | are free to provide another location where they should be stored.\n    |\n    */\n\n    'files' => storage_path('framework/sessions'),\n\n    /*\n    |--------------------------------------------------------------------------\n    | Session Database Connection\n    |--------------------------------------------------------------------------\n    |\n    | When using the \"database\" or \"redis\" session drivers, you may specify a\n    | connection that should be used to manage these sessions. This should\n    | correspond to a connection in your database configuration options.\n    |\n    */\n\n    'connection' => env('SESSION_CONNECTION'),\n\n    /*\n    |--------------------------------------------------------------------------\n    | Session Database Table\n    |--------------------------------------------------------------------------\n    |\n    | When using the \"database\" session driver, you may specify the table to\n    | be used to store sessions. Of course, a sensible default is defined\n    | for you; however, you're welcome to change this to another table.\n    |\n    */\n\n    'table' => env('SESSION_TABLE', 'sessions'),\n\n    /*\n    |--------------------------------------------------------------------------\n    | Session Cache Store\n    |--------------------------------------------------------------------------\n    |\n    | When using one of the framework's cache driven session backends, you may\n    | define the cache store which should be used to store the session data\n    | between requests. This must match one of your defined cache stores.\n    |\n    | Affects: \"dynamodb\", \"memcached\", \"redis\"\n    |\n    */\n\n    'store' => env('SESSION_STORE'),\n\n    /*\n    |--------------------------------------------------------------------------\n    | Session Sweeping Lottery\n    |--------------------------------------------------------------------------\n    |\n    | Some session drivers must manually sweep their storage location to get\n    | rid of old sessions from storage. Here are the chances that it will\n    | happen on a given request. By default, the odds are 2 out of 100.\n    |\n    */\n\n    'lottery' => [2, 100],\n\n    /*\n    |--------------------------------------------------------------------------\n    | Session Cookie Name\n    |--------------------------------------------------------------------------\n    |\n    | Here you may change the name of the session cookie that is created by\n    | the framework. Typically, you should not need to change this value\n    | since doing so does not grant a meaningful security improvement.\n    |\n    */\n\n    'cookie' => env(\n        'SESSION_COOKIE',\n        Str::slug(env('APP_NAME', 'laravel')).'-session'\n    ),\n\n    /*\n    |--------------------------------------------------------------------------\n    | Session Cookie Path\n    |--------------------------------------------------------------------------\n    |\n    | The session cookie path determines the path for which the cookie will\n    | be regarded as available. Typically, this will be the root path of\n    | your application, but you're free to change this when necessary.\n    |\n    */\n\n    'path' => env('SESSION_PATH', '/'),\n\n    /*\n    |--------------------------------------------------------------------------\n    | Session Cookie Domain\n    |--------------------------------------------------------------------------\n    |\n    | This value determines the domain and subdomains the session cookie is\n    | available to. By default, the cookie will be available to the root\n    | domain and all subdomains. Typically, this shouldn't be changed.\n    |\n    */\n\n    'domain' => env('SESSION_DOMAIN'),\n\n    /*\n    |--------------------------------------------------------------------------\n    | HTTPS Only Cookies\n    |--------------------------------------------------------------------------\n    |\n    | By setting this option to true, session cookies will only be sent back\n    | to the server if the browser has a HTTPS connection. This will keep\n    | the cookie from being sent to you when it can't be done securely.\n    |\n    */\n\n    'secure' => env('SESSION_SECURE_COOKIE'),\n\n    /*\n    |--------------------------------------------------------------------------\n    | HTTP Access Only\n    |--------------------------------------------------------------------------\n    |\n    | Setting this value to true will prevent JavaScript from accessing the\n    | value of the cookie and the cookie will only be accessible through\n    | the HTTP protocol. It's unlikely you should disable this option.\n    |\n    */\n\n    'http_only' => env('SESSION_HTTP_ONLY', true),\n\n    /*\n    |--------------------------------------------------------------------------\n    | Same-Site Cookies\n    |--------------------------------------------------------------------------\n    |\n    | This option determines how your cookies behave when cross-site requests\n    | take place, and can be used to mitigate CSRF attacks. By default, we\n    | will set this value to \"lax\" to permit secure cross-site requests.\n    |\n    | See: https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Set-Cookie#samesitesamesite-value\n    |\n    | Supported: \"lax\", \"strict\", \"none\", null\n    |\n    */\n\n    'same_site' => env('SESSION_SAME_SITE', 'lax'),\n\n    /*\n    |--------------------------------------------------------------------------\n    | Partitioned Cookies\n    |--------------------------------------------------------------------------\n    |\n    | Setting this value to true will tie the cookie to the top-level site for\n    | a cross-site context. Partitioned cookies are accepted by the browser\n    | when flagged \"secure\" and the Same-Site attribute is set to \"none\".\n    |\n    */\n\n    'partitioned' => env('SESSION_PARTITIONED_COOKIE', false),\n\n];\n","size_bytes":7839},"public/index.php":{"content":"<?php\n\nuse Illuminate\\Foundation\\Application;\nuse Illuminate\\Http\\Request;\n\ndefine('LARAVEL_START', microtime(true));\n\n// Determine if the application is in maintenance mode...\nif (file_exists($maintenance = __DIR__.'/../storage/framework/maintenance.php')) {\n    require $maintenance;\n}\n\n// Register the Composer autoloader...\nrequire __DIR__.'/../vendor/autoload.php';\n\n// Bootstrap Laravel and handle the request...\n/** @var Application $app */\n$app = require_once __DIR__.'/../bootstrap/app.php';\n\n$app->handleRequest(Request::capture());\n","size_bytes":543},"routes/console.php":{"content":"<?php\n\nuse Illuminate\\Foundation\\Inspiring;\nuse Illuminate\\Support\\Facades\\Artisan;\n\nArtisan::command('inspire', function () {\n    $this->comment(Inspiring::quote());\n})->purpose('Display an inspiring quote');\n","size_bytes":210},"routes/web.php":{"content":"<?php\n\nuse Illuminate\\Support\\Facades\\Route;\nuse App\\Http\\Controllers\\AuthController;\nuse App\\Http\\Controllers\\DashboardController;\nuse App\\Http\\Controllers\\WelcomeController;\n\n// Public routes\nRoute::get('/', [WelcomeController::class, 'index'])->name('welcome');\nRoute::get('/post/{slug}', [WelcomeController::class, 'show'])->name('post.show');\n\nRoute::get('/login', [AuthController::class, 'showLogin'])->name('login');\nRoute::post('/login', [AuthController::class, 'login']);\nRoute::post('/logout', [AuthController::class, 'logout'])->name('logout');\n\n// Protected routes\nRoute::middleware('auth')->group(function () {\n    Route::get('/dashboard', [DashboardController::class, 'index'])->name('dashboard');\n    Route::get('/dashboard/posts', [DashboardController::class, 'posts'])->name('dashboard.posts');\n    Route::get('/dashboard/tags', [DashboardController::class, 'tags'])->name('dashboard.tags');\n    \n    // Admin-only routes\n    Route::middleware('role:admin')->group(function () {\n        Route::get('/dashboard/users', [DashboardController::class, 'users'])->name('dashboard.users');\n        Route::get('/dashboard/categories', [DashboardController::class, 'categories'])->name('dashboard.categories');\n    });\n});\n","size_bytes":1231},"tests/TestCase.php":{"content":"<?php\n\nnamespace Tests;\n\nuse Illuminate\\Foundation\\Testing\\TestCase as BaseTestCase;\n\nabstract class TestCase extends BaseTestCase\n{\n    //\n}\n","size_bytes":142},"app/Models/User.php":{"content":"<?php\n\nnamespace App\\Models;\n\n// use Illuminate\\Contracts\\Auth\\MustVerifyEmail;\nuse Illuminate\\Database\\Eloquent\\Factories\\HasFactory;\nuse Illuminate\\Foundation\\Auth\\User as Authenticatable;\nuse Illuminate\\Notifications\\Notifiable;\n\nclass User extends Authenticatable\n{\n    /** @use HasFactory<\\Database\\Factories\\UserFactory> */\n    use HasFactory, Notifiable;\n\n    /**\n     * The attributes that are mass assignable.\n     *\n     * @var list<string>\n     */\n    protected $fillable = [\n        'name',\n        'email',\n        'password',\n        'role',\n        'avatar',\n        'bio',\n        'status',\n    ];\n\n    /**\n     * The attributes that should be hidden for serialization.\n     *\n     * @var list<string>\n     */\n    protected $hidden = [\n        'password',\n        'remember_token',\n    ];\n\n    /**\n     * Get the attributes that should be cast.\n     *\n     * @return array<string, string>\n     */\n    protected function casts(): array\n    {\n        return [\n            'email_verified_at' => 'datetime',\n            'password' => 'hashed',\n        ];\n    }\n\n    // Relationships\n    public function posts()\n    {\n        return $this->hasMany(Post::class, 'author_id');\n    }\n\n    public function categories()\n    {\n        return $this->hasMany(Category::class, 'created_by');\n    }\n\n    public function tags()\n    {\n        return $this->hasMany(Tag::class, 'created_by');\n    }\n}\n","size_bytes":1400},"app/Providers/AppServiceProvider.php":{"content":"<?php\n\nnamespace App\\Providers;\n\nuse Illuminate\\Support\\ServiceProvider;\n\nclass AppServiceProvider extends ServiceProvider\n{\n    /**\n     * Register any application services.\n     */\n    public function register(): void\n    {\n        //\n    }\n\n    /**\n     * Bootstrap any application services.\n     */\n    public function boot(): void\n    {\n        //\n    }\n}\n","size_bytes":361},"database/factories/UserFactory.php":{"content":"<?php\n\nnamespace Database\\Factories;\n\nuse Illuminate\\Database\\Eloquent\\Factories\\Factory;\nuse Illuminate\\Support\\Facades\\Hash;\nuse Illuminate\\Support\\Str;\n\n/**\n * @extends \\Illuminate\\Database\\Eloquent\\Factories\\Factory<\\App\\Models\\User>\n */\nclass UserFactory extends Factory\n{\n    /**\n     * The current password being used by the factory.\n     */\n    protected static ?string $password;\n\n    /**\n     * Define the model's default state.\n     *\n     * @return array<string, mixed>\n     */\n    public function definition(): array\n    {\n        return [\n            'name' => fake()->name(),\n            'email' => fake()->unique()->safeEmail(),\n            'email_verified_at' => now(),\n            'password' => static::$password ??= Hash::make('password'),\n            'remember_token' => Str::random(10),\n        ];\n    }\n\n    /**\n     * Indicate that the model's email address should be unverified.\n     */\n    public function unverified(): static\n    {\n        return $this->state(fn (array $attributes) => [\n            'email_verified_at' => null,\n        ]);\n    }\n}\n","size_bytes":1075},"database/migrations/0001_01_01_000000_create_users_table.php":{"content":"<?php\n\nuse Illuminate\\Database\\Migrations\\Migration;\nuse Illuminate\\Database\\Schema\\Blueprint;\nuse Illuminate\\Support\\Facades\\Schema;\n\nreturn new class extends Migration\n{\n    /**\n     * Run the migrations.\n     */\n    public function up(): void\n    {\n        Schema::create('users', function (Blueprint $table) {\n            $table->id();\n            $table->string('name');\n            $table->string('email')->unique();\n            $table->timestamp('email_verified_at')->nullable();\n            $table->string('password');\n            $table->enum('role', ['admin', 'user'])->default('user');\n            $table->string('avatar')->nullable();\n            $table->text('bio')->nullable();\n            $table->enum('status', ['active', 'inactive'])->default('active');\n            $table->rememberToken();\n            $table->timestamps();\n            \n            // Indexes\n            $table->index('role');\n            $table->index('status');\n        });\n\n        Schema::create('password_reset_tokens', function (Blueprint $table) {\n            $table->string('email')->primary();\n            $table->string('token');\n            $table->timestamp('created_at')->nullable();\n        });\n\n        Schema::create('sessions', function (Blueprint $table) {\n            $table->string('id')->primary();\n            $table->foreignId('user_id')->nullable()->index();\n            $table->string('ip_address', 45)->nullable();\n            $table->text('user_agent')->nullable();\n            $table->longText('payload');\n            $table->integer('last_activity')->index();\n        });\n    }\n\n    /**\n     * Reverse the migrations.\n     */\n    public function down(): void\n    {\n        Schema::dropIfExists('users');\n        Schema::dropIfExists('password_reset_tokens');\n        Schema::dropIfExists('sessions');\n    }\n};\n","size_bytes":1825},"database/migrations/0001_01_01_000001_create_cache_table.php":{"content":"<?php\n\nuse Illuminate\\Database\\Migrations\\Migration;\nuse Illuminate\\Database\\Schema\\Blueprint;\nuse Illuminate\\Support\\Facades\\Schema;\n\nreturn new class extends Migration\n{\n    /**\n     * Run the migrations.\n     */\n    public function up(): void\n    {\n        Schema::create('cache', function (Blueprint $table) {\n            $table->string('key')->primary();\n            $table->mediumText('value');\n            $table->integer('expiration');\n        });\n\n        Schema::create('cache_locks', function (Blueprint $table) {\n            $table->string('key')->primary();\n            $table->string('owner');\n            $table->integer('expiration');\n        });\n    }\n\n    /**\n     * Reverse the migrations.\n     */\n    public function down(): void\n    {\n        Schema::dropIfExists('cache');\n        Schema::dropIfExists('cache_locks');\n    }\n};\n","size_bytes":849},"database/migrations/0001_01_01_000002_create_jobs_table.php":{"content":"<?php\n\nuse Illuminate\\Database\\Migrations\\Migration;\nuse Illuminate\\Database\\Schema\\Blueprint;\nuse Illuminate\\Support\\Facades\\Schema;\n\nreturn new class extends Migration\n{\n    /**\n     * Run the migrations.\n     */\n    public function up(): void\n    {\n        Schema::create('jobs', function (Blueprint $table) {\n            $table->id();\n            $table->string('queue')->index();\n            $table->longText('payload');\n            $table->unsignedTinyInteger('attempts');\n            $table->unsignedInteger('reserved_at')->nullable();\n            $table->unsignedInteger('available_at');\n            $table->unsignedInteger('created_at');\n        });\n\n        Schema::create('job_batches', function (Blueprint $table) {\n            $table->string('id')->primary();\n            $table->string('name');\n            $table->integer('total_jobs');\n            $table->integer('pending_jobs');\n            $table->integer('failed_jobs');\n            $table->longText('failed_job_ids');\n            $table->mediumText('options')->nullable();\n            $table->integer('cancelled_at')->nullable();\n            $table->integer('created_at');\n            $table->integer('finished_at')->nullable();\n        });\n\n        Schema::create('failed_jobs', function (Blueprint $table) {\n            $table->id();\n            $table->string('uuid')->unique();\n            $table->text('connection');\n            $table->text('queue');\n            $table->longText('payload');\n            $table->longText('exception');\n            $table->timestamp('failed_at')->useCurrent();\n        });\n    }\n\n    /**\n     * Reverse the migrations.\n     */\n    public function down(): void\n    {\n        Schema::dropIfExists('jobs');\n        Schema::dropIfExists('job_batches');\n        Schema::dropIfExists('failed_jobs');\n    }\n};\n","size_bytes":1812},"database/seeders/DatabaseSeeder.php":{"content":"<?php\n\nnamespace Database\\Seeders;\n\nuse App\\Models\\User;\n// use Illuminate\\Database\\Console\\Seeds\\WithoutModelEvents;\nuse Illuminate\\Database\\Seeder;\n\nclass DatabaseSeeder extends Seeder\n{\n    /**\n     * Seed the application's database.\n     */\n    public function run(): void\n    {\n        // User::factory(10)->create();\n\n        User::factory()->create([\n            'name' => 'Test User',\n            'email' => 'test@example.com',\n        ]);\n    }\n}\n","size_bytes":456},"resources/css/app.css":{"content":"@import 'tailwindcss';\n\n@source '../../vendor/laravel/framework/src/Illuminate/Pagination/resources/views/*.blade.php';\n@source '../../storage/framework/views/*.php';\n@source '../**/*.blade.php';\n@source '../**/*.js';\n\n@theme {\n    --font-sans: 'Instrument Sans', ui-sans-serif, system-ui, sans-serif, 'Apple Color Emoji', 'Segoe UI Emoji',\n        'Segoe UI Symbol', 'Noto Color Emoji';\n}\n","size_bytes":390},"resources/js/app.js":{"content":"import './bootstrap';\n","size_bytes":22},"resources/js/bootstrap.js":{"content":"import axios from 'axios';\nwindow.axios = axios;\n\nwindow.axios.defaults.headers.common['X-Requested-With'] = 'XMLHttpRequest';\n","size_bytes":127},"resources/views/login.blade.php":{"content":"<!DOCTYPE html>\n<html lang=\"id\">\n  <head>\n    <script src=\"https://static.readdy.ai/static/e.js\"></script>\n    <meta charset=\"UTF-8\" />\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\n    <title>Login - Sistem Manajemen Cuti Karyawan</title>\n    <script src=\"https://cdn.tailwindcss.com/3.4.16\"></script>\n    <link rel=\"preconnect\" href=\"https://fonts.googleapis.com\" />\n    <link rel=\"preconnect\" href=\"https://fonts.gstatic.com\" crossorigin />\n    <link\n      href=\"https://fonts.googleapis.com/css2?family=Pacifico&display=swap\"\n      rel=\"stylesheet\"\n    />\n    <link\n      rel=\"stylesheet\"\n      href=\"https://cdnjs.cloudflare.com/ajax/libs/remixicon/4.6.0/remixicon.min.css\"\n    />\n    <script>\n      tailwind.config = {\n        theme: {\n          extend: {\n            colors: {\n              primary: \"#3B82F6\",\n              secondary: \"#64748B\",\n            },\n            borderRadius: {\n              none: \"0px\",\n              sm: \"4px\",\n              DEFAULT: \"8px\",\n              md: \"12px\",\n              lg: \"16px\",\n              xl: \"20px\",\n              \"2xl\": \"24px\",\n              \"3xl\": \"32px\",\n              full: \"9999px\",\n              button: \"8px\",\n            },\n          },\n        },\n      };\n    </script>\n    <style>\n      :where([class^=\"ri-\"])::before {\n        content: \"\\f3c2\";\n      }\n      .gradient-bg {\n        background: linear-gradient(135deg, #f8fafc 0%, #b2d8ff 100%);\n      }\n      .input-field {\n        transition: all 0.3s ease;\n      }\n      .input-field:focus {\n        transform: translateY(-1px);\n        box-shadow: 0 4px 12px rgba(59, 130, 246, 0.15);\n      }\n      .password-toggle {\n        cursor: pointer;\n        transition: color 0.2s ease;\n      }\n      .password-toggle:hover {\n        color: #3b82f6;\n      }\n    </style>\n  </head>\n  <body class=\"gradient-bg min-h-screen\">\n\n    <main\n      class=\"flex items-center justify-center min-h-[calc(100vh-80px)] px-6 py-12\"\n    >\n      <div class=\"w-full max-w-md\">\n        <div\n          class=\"bg-white rounded-2xl shadow-xl border border-gray-100 overflow-hidden\"\n        >\n          <div class=\"px-8 py-10\">\n            <div class=\"text-center mb-8\">\n              <div class=\"font-bold text-3xl text-primary mb-4\">\n                SMCK\n              </div>\n              <h1 class=\"text-2xl font-bold text-gray-900 mb-2\">\n                Masuk ke Sistem\n              </h1>\n              <p class=\"text-gray-600\">Kelola cuti karyawan dengan mudah</p>\n            </div>\n\n\n            <form method=\"POST\" action=\"\" class=\"space-y-6\">\n              <div class=\"space-y-2\">\n                <label\n                  for=\"email\"\n                  class=\"block text-sm font-medium text-gray-700\"\n                  >Email atau NIP</label\n                >\n                <div class=\"relative\">\n                  <div\n                    class=\"absolute inset-y-0 left-0 pl-3 flex items-center pointer-events-none\"\n                  >\n                    <div class=\"w-5 h-5 flex items-center justify-center\">\n                      <i class=\"ri-user-line text-gray-400\"></i>\n                    </div>\n                  </div>\n                  <input\n                    type=\"text\"\n                    id=\"email\"\n                    name=\"email\"\n                    required\n                    value=\"<?php echo isset($_POST['email']) ? htmlspecialchars($_POST['email']) : ''; ?>\"\n                    class=\"input-field w-full pl-10 pr-4 py-3 border border-gray-200 rounded-lg focus:ring-2 focus:ring-primary focus:border-transparent outline-none text-sm\"\n                    placeholder=\"Masukkan email atau NIP\"\n                  />\n                </div>\n              </div>\n\n              <div class=\"space-y-2\">\n                <label\n                  for=\"password\"\n                  class=\"block text-sm font-medium text-gray-700\"\n                  >Password</label\n                >\n                <div class=\"relative\">\n                  <div\n                    class=\"absolute inset-y-0 left-0 pl-3 flex items-center pointer-events-none\"\n                  >\n                    <div class=\"w-5 h-5 flex items-center justify-center\">\n                      <i class=\"ri-lock-line text-gray-400\"></i>\n                    </div>\n                  </div>\n                  <input\n                    type=\"password\"\n                    id=\"password\"\n                    name=\"password\"\n                    required\n                    class=\"input-field w-full pl-10 pr-12 py-3 border border-gray-200 rounded-lg focus:ring-2 focus:ring-primary focus:border-transparent outline-none text-sm\"\n                    placeholder=\"Masukkan password\"\n                  />\n                  <div\n                    class=\"absolute inset-y-0 right-0 pr-3 flex items-center\"\n                  >\n                    <div\n                      class=\"w-5 h-5 flex items-center justify-center password-toggle\"\n                      id=\"togglePassword\"\n                    >\n                      <i class=\"ri-eye-off-line text-gray-400\"></i>\n                    </div>\n                  </div>\n                </div>\n              </div>\n\n              <button\n                type=\"submit\"\n                class=\"w-full bg-primary text-white py-3 px-4 !rounded-button hover:bg-blue-600 focus:ring-4 focus:ring-blue-200 transition-all duration-300 font-medium text-sm whitespace-nowrap disabled:opacity-50 disabled:cursor-not-allowed\"\n              >\n                Masuk\n              </button>\n            </form>\n\n            <div class=\"mt-6 text-center\">\n                <!-- <p class=\"text-sm text-gray-600\">\n                    Demo Login:<br>\n                    <strong>Admin:</strong> admin@perusahaan.com / password<br>\n                    <strong>Karyawan:</strong> budi.santoso@perusahaan.com / password\n                </p> -->\n            </div>\n          </div>\n        </div>\n      </div>\n    </main>\n\n    <script>\n      document.addEventListener(\"DOMContentLoaded\", function () {\n        const passwordInput = document.getElementById(\"password\");\n        const togglePassword = document.getElementById(\"togglePassword\");\n        const toggleIcon = togglePassword.querySelector(\"i\");\n\n        togglePassword.addEventListener(\"click\", function () {\n          const type =\n            passwordInput.getAttribute(\"type\") === \"password\"\n              ? \"text\"\n              : \"password\";\n          passwordInput.setAttribute(\"type\", type);\n\n          if (type === \"password\") {\n            toggleIcon.className = \"ri-eye-off-line text-gray-400\";\n          } else {\n            toggleIcon.className = \"ri-eye-line text-gray-400\";\n          }\n        });\n      });\n    </script>\n    <script>\n      !(function (t, e) {\n        var o, n, p, r;\n        e.__SV ||\n          ((window.posthog = e),\n          (e._i = []),\n          (e.init = function (i, s, a) {\n            function g(t, e) {\n              var o = e.split(\".\");\n              2 == o.length && ((t = t[o[0]]), (e = o[1])),\n                (t[e] = function () {\n                  t.push([e].concat(Array.prototype.slice.call(arguments, 0)));\n                });\n            }\n            ((p = t.createElement(\"script\")).type = \"text/javascript\"),\n              (p.crossOrigin = \"anonymous\"),\n              (p.async = !0),\n              (p.src =\n                s.api_host.replace(\".i.posthog.com\", \"-assets.i.posthog.com\") +\n                \"/static/array.js\"),\n              (r = t.getElementsByTagName(\"script\")[0]).parentNode.insertBefore(\n                p,\n                r\n              );\n            var u = e;\n            for (\n              void 0 !== a ? (u = e[a] = []) : (a = \"posthog\"),\n                u.people = u.people || [],\n                u.toString = function (t) {\n                  var e = \"posthog\";\n                  return (\n                    \"posthog\" !== a && (e += \".\" + a), t || (e += \" (stub)\"), e\n                  );\n                },\n                u.people.toString = function () {\n                  return u.toString(1) + \".people (stub)\";\n                },\n                o =\n                  \"init capture register register_once register_for_session unregister unregister_for_session getFeatureFlag getFeatureFlagPayload isFeatureEnabled reloadFeatureFlags updateEarlyAccessFeatureEnrollment getEarlyAccessFeatures on onFeatureFlags onSessionId getSurveys getActiveMatchingSurveys renderSurvey canRenderSurvey getNextSurveyStep identify setPersonProperties group resetGroups setPersonPropertiesForFlags resetPersonPropertiesForFlags setGroupPropertiesForFlags reset get_distinct_id getGroups get_session_id get_session_replay_url alias set_config startSessionRecording stopSessionRecording sessionRecordingStarted captureException loadToolbar get_property getSessionProperty createPersonProfile opt_in_capturing opt_out_capturing has_opted_in_capturing has_opted_out_capturing clear_opt_in_out_capturing debug\".split(\n                    \" \"\n                  ),\n                n = 0;\n              n < o.length;\n              n++\n            )\n              g(u, o[n]);\n            e._i.push([i, s, a]);\n          }),\n          (e.__SV = 1));\n      })(document, window.posthog || []);\n      posthog.init(\"phc_t9tkQZJiyi2ps9zUYm8TDsL6qXo4YmZx0Ot5rBlAlEd\", {\n        api_host: \"https://us.i.posthog.com\",\n        autocapture: false,\n        capture_pageview: false,\n        capture_pageleave: false,\n        capture_performance: {\n          web_vitals: false,\n        },\n        rageclick: false,\n      });\n      window.shareKey = \"gMdAJ6PgwH50sJZD2QQBmg\";\n      window.host = \"readdy.ai\";\n    </script>\n  </body>\n</html>","size_bytes":9676},"resources/views/welcome.blade.php":{"content":"<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>Blog - {{ config('app.name') }}</title>\n    \n    <!-- Bootstrap 5 CSS CDN -->\n    <link href=\"https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css\" rel=\"stylesheet\">\n    \n    <!-- Bootstrap Icons -->\n    <link href=\"https://cdn.jsdelivr.net/npm/bootstrap-icons@1.10.0/font/bootstrap-icons.css\" rel=\"stylesheet\">\n    \n    @vite(['resources/css/app.css', 'resources/js/app.js'])\n</head>\n<body>\n    <!-- Navigation -->\n    <nav class=\"navbar navbar-expand-lg navbar-light bg-white shadow-sm\">\n        <div class=\"container\">\n            <a class=\"navbar-brand fw-bold\" href=\"{{ url('/') }}\">\n                <i class=\"bi bi-journal-richtext text-primary me-2\"></i>\n                {{ config('app.name') }}\n            </a>\n            \n            <button class=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarNav\">\n                <span class=\"navbar-toggler-icon\"></span>\n            </button>\n            \n            <div class=\"collapse navbar-collapse\" id=\"navbarNav\">\n                <ul class=\"navbar-nav me-auto\">\n                    <li class=\"nav-item\">\n                        <a class=\"nav-link active\" href=\"{{ url('/') }}\">Home</a>\n                    </li>\n                    <li class=\"nav-item\">\n                        <a class=\"nav-link\" href=\"#about\">About</a>\n                    </li>\n                    <li class=\"nav-item\">\n                        <a class=\"nav-link\" href=\"#contact\">Contact</a>\n                    </li>\n                </ul>\n                \n                <div class=\"d-flex\">\n                    @auth\n                        <a href=\"{{ route('dashboard') }}\" class=\"btn btn-outline-primary me-2\">\n                            <i class=\"bi bi-speedometer2 me-1\"></i>Dashboard\n                        </a>\n                        <form method=\"POST\" action=\"{{ route('logout') }}\" class=\"d-inline\">\n                            @csrf\n                            <button type=\"submit\" class=\"btn btn-outline-secondary\">\n                                <i class=\"bi bi-box-arrow-right me-1\"></i>Logout\n                            </button>\n                        </form>\n                    @else\n                        <a href=\"{{ route('login') }}\" class=\"btn btn-primary\">\n                            <i class=\"bi bi-box-arrow-in-right me-1\"></i>Login\n                        </a>\n                    @endauth\n                </div>\n            </div>\n        </div>\n    </nav>\n\n    <!-- Hero Section -->\n    <div class=\"bg-primary text-white py-5 mb-5\">\n        <div class=\"container\">\n            <div class=\"row align-items-center\">\n                <div class=\"col-lg-8\">\n                    <h1 class=\"display-4 fw-bold mb-3\">Welcome to Our Blog</h1>\n                    <p class=\"lead mb-4\">Discover insights, tutorials, and stories from our community of writers. Stay updated with the latest trends in technology, business, and more.</p>\n                    <div class=\"d-flex align-items-center\">\n                        <i class=\"bi bi-journal-bookmark me-2\"></i>\n                        <span>{{ $posts->total() }} articles available</span>\n                    </div>\n                </div>\n                <div class=\"col-lg-4 text-center\">\n                    <i class=\"bi bi-file-earmark-text\" style=\"font-size: 8rem; opacity: 0.3;\"></i>\n                </div>\n            </div>\n        </div>\n    </div>\n\n    <!-- Blog Posts -->\n    <div class=\"container mb-5\">\n        @if($posts->count() > 0)\n        <div class=\"row\">\n            @foreach($posts as $post)\n            <div class=\"col-lg-4 col-md-6 mb-4\">\n                <div class=\"card h-100 shadow-sm border-0\">\n                    <div class=\"card-body d-flex flex-column\">\n                        <!-- Category Badge -->\n                        @if($post->category)\n                        <div class=\"mb-2\">\n                            <span class=\"badge bg-primary rounded-pill\">{{ $post->category->name }}</span>\n                        </div>\n                        @endif\n                        \n                        <!-- Post Title -->\n                        <h5 class=\"card-title\">\n                            <a href=\"{{ url('/post/' . $post->slug) }}\" class=\"text-decoration-none text-dark\">\n                                {{ $post->title }}\n                            </a>\n                        </h5>\n                        \n                        <!-- Post Excerpt -->\n                        <p class=\"card-text text-muted flex-grow-1\">{{ $post->excerpt }}</p>\n                        \n                        <!-- Tags -->\n                        @if($post->tags->count() > 0)\n                        <div class=\"mb-3\">\n                            @foreach($post->tags as $tag)\n                            <span class=\"badge bg-light text-dark me-1\">#{{ $tag->name }}</span>\n                            @endforeach\n                        </div>\n                        @endif\n                        \n                        <!-- Post Meta -->\n                        <div class=\"d-flex justify-content-between align-items-center text-muted small\">\n                            <div>\n                                <i class=\"bi bi-person me-1\"></i>{{ $post->author->name }}\n                            </div>\n                            <div>\n                                <i class=\"bi bi-calendar me-1\"></i>{{ $post->published_at->format('M d, Y') }}\n                            </div>\n                        </div>\n                        \n                        <!-- Views and Read More -->\n                        <div class=\"d-flex justify-content-between align-items-center mt-3\">\n                            <div class=\"text-muted small\">\n                                <i class=\"bi bi-eye me-1\"></i>{{ number_format($post->views) }} views\n                            </div>\n                            <a href=\"{{ url('/post/' . $post->slug) }}\" class=\"btn btn-outline-primary btn-sm\">\n                                Read More <i class=\"bi bi-arrow-right ms-1\"></i>\n                            </a>\n                        </div>\n                    </div>\n                </div>\n            </div>\n            @endforeach\n        </div>\n        \n        <!-- Pagination -->\n        @if($posts->hasPages())\n        <div class=\"d-flex justify-content-center\">\n            {{ $posts->links() }}\n        </div>\n        @endif\n        \n        @else\n        <!-- No Posts -->\n        <div class=\"text-center py-5\">\n            <i class=\"bi bi-journal-x text-muted\" style=\"font-size: 4rem;\"></i>\n            <h3 class=\"mt-3 text-muted\">No posts available</h3>\n            <p class=\"text-muted\">Check back later for new content!</p>\n        </div>\n        @endif\n    </div>\n\n    <!-- Footer -->\n    <footer class=\"bg-dark text-white py-4 mt-5\">\n        <div class=\"container\">\n            <div class=\"row\">\n                <div class=\"col-md-6\">\n                    <h5>{{ config('app.name') }}</h5>\n                    <p class=\"mb-0\">Sharing knowledge and insights with the world.</p>\n                </div>\n                <div class=\"col-md-6 text-md-end\">\n                    <p class=\"mb-0\">&copy; {{ date('Y') }} {{ config('app.name') }}. All rights reserved.</p>\n                </div>\n            </div>\n        </div>\n    </footer>\n\n    <!-- Bootstrap 5 JS Bundle CDN -->\n    <script src=\"https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js\"></script>\n</body>\n</html>","size_bytes":7659},"tests/Feature/ExampleTest.php":{"content":"<?php\n\nnamespace Tests\\Feature;\n\n// use Illuminate\\Foundation\\Testing\\RefreshDatabase;\nuse Tests\\TestCase;\n\nclass ExampleTest extends TestCase\n{\n    /**\n     * A basic test example.\n     */\n    public function test_the_application_returns_a_successful_response(): void\n    {\n        $response = $this->get('/');\n\n        $response->assertStatus(200);\n    }\n}\n","size_bytes":359},"tests/Unit/ExampleTest.php":{"content":"<?php\n\nnamespace Tests\\Unit;\n\nuse PHPUnit\\Framework\\TestCase;\n\nclass ExampleTest extends TestCase\n{\n    /**\n     * A basic test example.\n     */\n    public function test_that_true_is_true(): void\n    {\n        $this->assertTrue(true);\n    }\n}\n","size_bytes":243},"app/Http/Controllers/Controller.php":{"content":"<?php\n\nnamespace App\\Http\\Controllers;\n\nabstract class Controller\n{\n    //\n}\n","size_bytes":77},"public/assets/css/style.css":{"content":"/* Dashboard CSS Variables */\n:root {\n    --primary-color: #7c3aed;\n    --secondary-color: #6366f1;\n    --success-color: #10b981;\n    --warning-color: #f59e0b;\n    --danger-color: #ef4444;\n    --info-color: #06b6d4;\n    \n    /* Background colors */\n    --bg-light: #f8fafc;\n    --bg-white: #ffffff;\n    --bg-dark: #1e293b;\n    --bg-darker: #0f172a;\n    \n    /* Text colors */\n    --text-primary: #1e293b;\n    --text-secondary: #64748b;\n    --text-muted: #94a3b8;\n    --text-white: #ffffff;\n    \n    /* Sidebar */\n    --sidebar-width: 250px;\n    --sidebar-bg: #ffffff;\n    --sidebar-text: #64748b;\n    --sidebar-active: #7c3aed;\n    \n    /* Borders */\n    --border-color: #e2e8f0;\n    \n    /* Shadows */\n    --shadow: 0 1px 3px 0 rgb(0 0 0 / 0.1), 0 1px 2px -1px rgb(0 0 0 / 0.1);\n    --shadow-lg: 0 10px 15px -3px rgb(0 0 0 / 0.1), 0 4px 6px -4px rgb(0 0 0 / 0.1);\n}\n\n/* Dark theme variables */\n[data-theme=\"dark\"] {\n    --bg-light: #0f172a;\n    --bg-white: #1e293b;\n    --bg-dark: #334155;\n    --bg-darker: #020617;\n    \n    --text-primary: #f1f5f9;\n    --text-secondary: #cbd5e1;\n    --text-muted: #94a3b8;\n    \n    --sidebar-bg: #1e293b;\n    --sidebar-text: #cbd5e1;\n    --border-color: #334155;\n    \n    --shadow: 0 1px 3px 0 rgb(0 0 0 / 0.3), 0 1px 2px -1px rgb(0 0 0 / 0.3);\n}\n\n/* Global Styles */\n* {\n    margin: 0;\n    padding: 0;\n    box-sizing: border-box;\n}\n\nbody {\n    font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;\n    background-color: var(--bg-light);\n    color: var(--text-primary);\n    line-height: 1.6;\n    transition: all 0.3s ease;\n}\n\n.wrapper {\n    display: flex;\n    min-height: 100vh;\n}\n\n/* Sidebar Styles */\n.sidebar {\n    width: var(--sidebar-width);\n    background-color: var(--sidebar-bg);\n    box-shadow: var(--shadow);\n    transition: all 0.3s ease;\n    position: fixed;\n    height: 100vh;\n    z-index: 1000;\n    overflow-y: auto;\n}\n\n.sidebar-header {\n    padding: 1.5rem 1.25rem;\n    border-bottom: 1px solid var(--border-color);\n}\n\n.sidebar-header span {\n    color: var(--text-primary);\n    font-size: 1.25rem;\n}\n\n.sidebar-menu {\n    padding: 1rem 0;\n}\n\n.menu-item {\n    margin-bottom: 0.5rem;\n}\n\n.menu-link {\n    display: flex;\n    align-items: center;\n    padding: 0.75rem 1.25rem;\n    color: var(--sidebar-text);\n    text-decoration: none;\n    transition: all 0.3s ease;\n    position: relative;\n}\n\n.menu-link:hover {\n    color: var(--sidebar-active);\n    background-color: rgba(124, 58, 237, 0.1);\n}\n\n.menu-item.active .menu-link {\n    color: var(--sidebar-active);\n    background-color: rgba(124, 58, 237, 0.15);\n    border-right: 3px solid var(--sidebar-active);\n}\n\n.menu-link i {\n    width: 20px;\n    margin-right: 0.75rem;\n    font-size: 1.1rem;\n}\n\n.badge {\n    font-size: 0.75rem;\n}\n\n/* Main Content */\n.main-content {\n    flex: 1;\n    margin-left: var(--sidebar-width);\n    transition: all 0.3s ease;\n}\n\n/* Top Navbar */\n.navbar {\n    background-color: var(--bg-white) !important;\n    box-shadow: var(--shadow);\n    padding: 1rem 0;\n}\n\n.sidebar-toggle {\n    color: var(--text-secondary);\n    border: none;\n    background: none;\n    font-size: 1.25rem;\n}\n\n.search-box {\n    max-width: 400px;\n}\n\n.search-box .form-control {\n    background-color: transparent;\n    color: var(--text-primary);\n}\n\n.search-box .form-control:focus {\n    box-shadow: none;\n    border-color: var(--primary-color);\n}\n\n/* Theme Toggle */\n#themeToggle {\n    color: var(--text-secondary);\n    border: none;\n    background: none;\n    font-size: 1.25rem;\n}\n\n.theme-icon {\n    transition: transform 0.3s ease;\n}\n\n[data-theme=\"dark\"] .theme-icon {\n    transform: rotate(180deg);\n}\n\n/* Welcome Section */\n.welcome-section {\n    background-color: var(--bg-white);\n    padding: 2rem;\n    border-radius: 12px;\n    box-shadow: var(--shadow);\n    margin-bottom: 1.5rem;\n}\n\n.welcome-section h2 {\n    color: var(--text-primary);\n    font-weight: 600;\n}\n\n/* Cards */\n.card {\n    background-color: var(--bg-white);\n    border: 1px solid var(--border-color);\n    box-shadow: var(--shadow);\n    border-radius: 12px;\n    transition: all 0.3s ease;\n}\n\n.card:hover {\n    box-shadow: var(--shadow-lg);\n    transform: translateY(-2px);\n}\n\n/* Main Illustration Card */\n.main-card {\n    background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);\n    color: white;\n    border: none;\n}\n\n.weather-info .temperature {\n    font-size: 2.5rem;\n    font-weight: 300;\n}\n\n.weather-icon {\n    font-size: 2rem;\n    color: #fbbf24;\n}\n\n.illustration-area {\n    margin-top: 2rem;\n}\n\n.illustration-placeholder {\n    text-align: center;\n    padding: 2rem 0;\n}\n\n/* Stat Cards */\n.stat-card {\n    border: none;\n    color: white;\n    position: relative;\n    overflow: hidden;\n}\n\n.stat-card-blue {\n    background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);\n}\n\n.stat-card-purple {\n    background: linear-gradient(135deg, #7c3aed 0%, #a855f7 100%);\n}\n\n.stat-card-indigo {\n    background: linear-gradient(135deg, #6366f1 0%, #8b5cf6 100%);\n}\n\n.stat-card-orange {\n    background: linear-gradient(135deg, #f59e0b 0%, #ef4444 100%);\n    position: relative;\n}\n\n.stat-card .card-title {\n    font-size: 2.5rem;\n    font-weight: 600;\n}\n\n.upgrade-btn {\n    position: absolute;\n    bottom: 1rem;\n    right: 1rem;\n}\n\n.upgrade-btn .btn {\n    font-size: 0.875rem;\n    font-weight: 600;\n}\n\n/* Order Details & Sales Report */\n.order-item {\n    padding: 0.5rem 0;\n    border-bottom: 1px solid var(--border-color);\n}\n\n.order-item:last-child {\n    border-bottom: none;\n}\n\n.sales-chart-placeholder {\n    background: linear-gradient(45deg, #f8fafc, #e2e8f0);\n    border-radius: 8px;\n    margin-top: 1rem;\n}\n\n[data-theme=\"dark\"] .sales-chart-placeholder {\n    background: linear-gradient(45deg, #334155, #475569);\n}\n\n/* Responsive Design */\n@media (max-width: 992px) {\n    .sidebar {\n        margin-left: -250px;\n    }\n    \n    .sidebar.show {\n        margin-left: 0;\n    }\n    \n    .main-content {\n        margin-left: 0;\n        width: 100%;\n    }\n    \n    .sidebar-overlay {\n        position: fixed;\n        top: 0;\n        left: 0;\n        width: 100%;\n        height: 100vh;\n        background-color: rgba(0, 0, 0, 0.5);\n        z-index: 999;\n        display: none;\n    }\n    \n    .sidebar-overlay.show {\n        display: block;\n    }\n}\n\n@media (max-width: 768px) {\n    .welcome-section {\n        padding: 1.5rem;\n    }\n    \n    .welcome-section h2 {\n        font-size: 1.5rem;\n    }\n    \n    .stat-card .card-title {\n        font-size: 2rem;\n    }\n    \n    .search-box {\n        max-width: 250px;\n    }\n    \n    .navbar-nav .btn {\n        font-size: 1.1rem;\n    }\n}\n\n@media (max-width: 576px) {\n    .container-fluid {\n        padding: 1rem;\n    }\n    \n    .welcome-section {\n        padding: 1rem;\n    }\n    \n    .stat-card .card-title {\n        font-size: 1.75rem;\n    }\n    \n    .weather-info .temperature {\n        font-size: 2rem;\n    }\n    \n    .search-box {\n        display: none;\n    }\n    \n    .upgrade-btn {\n        position: static;\n        margin-top: 1rem;\n    }\n}\n\n/* Animations */\n@keyframes fadeInUp {\n    from {\n        opacity: 0;\n        transform: translateY(30px);\n    }\n    to {\n        opacity: 1;\n        transform: translateY(0);\n    }\n}\n\n.fade-in-up {\n    animation: fadeInUp 0.6s ease-out;\n}\n\n/* Dark Mode Enhancements */\n[data-theme=\"dark\"] {\n    color-scheme: dark;\n}\n\n[data-theme=\"dark\"] .card-header {\n    color: var(--text-primary);\n    border-color: var(--border-color);\n}\n\n[data-theme=\"dark\"] .card-title,\n[data-theme=\"dark\"] .card-text,\n[data-theme=\"dark\"] h1,\n[data-theme=\"dark\"] h2,\n[data-theme=\"dark\"] h3,\n[data-theme=\"dark\"] h4,\n[data-theme=\"dark\"] h5,\n[data-theme=\"dark\"] h6,\n[data-theme=\"dark\"] p,\n[data-theme=\"dark\"] span,\n[data-theme=\"dark\"] small,\n[data-theme=\"dark\"] .text-muted,\n[data-theme=\"dark\"] label,\n[data-theme=\"dark\"] .form-label,\n[data-theme=\"dark\"] .form-text {\n    color: var(--text-primary) !important;\n}\n\n[data-theme=\"dark\"] .text-muted {\n    color: var(--text-muted) !important;\n}\n\n/* Dropdown Menu Dark Mode */\n[data-theme=\"dark\"] .dropdown-menu {\n    background-color: var(--bg-white);\n    border-color: var(--border-color);\n    box-shadow: var(--shadow-lg);\n}\n\n[data-theme=\"dark\"] .dropdown-item {\n    color: var(--text-primary);\n}\n\n[data-theme=\"dark\"] .dropdown-item:hover,\n[data-theme=\"dark\"] .dropdown-item:focus {\n    background-color: var(--bg-dark);\n    color: var(--text-primary);\n}\n\n[data-theme=\"dark\"] .dropdown-divider {\n    border-color: var(--border-color);\n}\n\n/* Form Controls Dark Mode */\n[data-theme=\"dark\"] .form-control,\n[data-theme=\"dark\"] .form-select {\n    background-color: #374151;\n    border-color: #4b5563;\n    color: #f8f9fa;\n}\n\n[data-theme=\"dark\"] .form-control:focus,\n[data-theme=\"dark\"] .form-select:focus {\n    background-color: #374151;\n    border-color: var(--primary-color);\n    color: #f8f9fa;\n    box-shadow: 0 0 0 0.2rem rgba(124, 58, 237, 0.25);\n}\n\n[data-theme=\"dark\"] .form-control::placeholder {\n    color: var(--text-muted);\n}\n\n/* Enhanced Select Dark Mode */\n[data-theme=\"dark\"] .form-select {\n    background-image: url(\"data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 16 16'%3e%3cpath fill='none' stroke='%23f8f9fa' stroke-linecap='round' stroke-linejoin='round' stroke-width='2' d='M2 5l6 6 6-6'/%3e%3c/svg%3e\");\n    background-repeat: no-repeat;\n    background-position: right 0.75rem center;\n    background-size: 16px 12px;\n}\n\n[data-theme=\"dark\"] .form-select:disabled {\n    background-color: #1f2937;\n    border-color: #374151;\n    color: #6b7280;\n    opacity: 0.6;\n}\n\n[data-theme=\"dark\"] .form-select option {\n    background-color: #374151;\n    color: #f8f9fa;\n    border: none;\n}\n\n/* Select dropdown styling for WebKit browsers */\n[data-theme=\"dark\"] .form-select option:hover {\n    background-color: #4b5563;\n    color: #f8f9fa;\n}\n\n[data-theme=\"dark\"] .form-select option:checked {\n    background-color: var(--primary-color);\n    color: #ffffff;\n}\n\n/* Button Dark Mode */\n[data-theme=\"dark\"] .btn-outline-secondary {\n    color: var(--text-primary);\n    border-color: var(--border-color);\n}\n\n[data-theme=\"dark\"] .btn-outline-secondary:hover {\n    background-color: var(--bg-dark);\n    border-color: var(--border-color);\n    color: var(--text-primary);\n}\n\n[data-theme=\"dark\"] .btn-link {\n    color: var(--text-primary);\n}\n\n[data-theme=\"dark\"] .btn-link:hover {\n    color: var(--primary-color);\n}\n\n/* List Group Dark Mode */\n[data-theme=\"dark\"] .list-group-item {\n    background-color: var(--bg-white);\n    border-color: var(--border-color);\n    color: var(--text-primary);\n}\n\n[data-theme=\"dark\"] .list-group-item:hover {\n    background-color: var(--bg-dark);\n}\n\n[data-theme=\"dark\"] .list-group-item.active {\n    background-color: var(--primary-color);\n    border-color: var(--primary-color);\n}\n\n/* Alert Dark Mode */\n[data-theme=\"dark\"] .alert {\n    border-color: var(--border-color);\n}\n\n[data-theme=\"dark\"] .alert-light {\n    background-color: var(--bg-dark);\n    border-color: var(--border-color);\n    color: var(--text-primary);\n}\n\n/* Modal Dark Mode */\n[data-theme=\"dark\"] .modal-content {\n    background-color: var(--bg-white);\n    color: var(--text-primary);\n}\n\n[data-theme=\"dark\"] .modal-header {\n    border-color: var(--border-color);\n}\n\n[data-theme=\"dark\"] .modal-footer {\n    border-color: var(--border-color);\n}\n\n[data-theme=\"dark\"] .btn-close {\n    filter: invert(1) grayscale(100%) brightness(200%);\n}\n\n/* Pagination Dark Mode */\n[data-theme=\"dark\"] .pagination .page-link {\n    background-color: var(--bg-white);\n    border-color: var(--border-color);\n    color: var(--text-primary);\n}\n\n[data-theme=\"dark\"] .pagination .page-item.active .page-link {\n    background-color: var(--primary-color);\n    border-color: var(--primary-color);\n}\n\n[data-theme=\"dark\"] .pagination .page-link:hover {\n    background-color: var(--bg-dark);\n    border-color: var(--border-color);\n    color: var(--text-primary);\n}\n\n/* Breadcrumb Dark Mode */\n[data-theme=\"dark\"] .breadcrumb-item + .breadcrumb-item::before {\n    color: var(--text-muted);\n}\n\n[data-theme=\"dark\"] .breadcrumb-item a {\n    color: var(--primary-color);\n}\n\n[data-theme=\"dark\"] .breadcrumb-item.active {\n    color: var(--text-muted);\n}\n\n/* Input Group Dark Mode */\n[data-theme=\"dark\"] .input-group-text {\n    background-color: var(--bg-white);\n    border-color: var(--border-color);\n    color: var(--text-primary);\n}\n\n/* Toast Dark Mode */\n[data-theme=\"dark\"] .toast {\n    background-color: var(--bg-white);\n    border-color: var(--border-color);\n    color: var(--text-primary);\n}\n\n[data-theme=\"dark\"] .toast-header {\n    background-color: var(--bg-dark);\n    border-color: var(--border-color);\n    color: var(--text-primary);\n}\n\n/* Progress Bar Dark Mode */\n[data-theme=\"dark\"] .progress {\n    background-color: var(--bg-dark);\n}\n\n/* Accordion Dark Mode */\n[data-theme=\"dark\"] .accordion-item {\n    background-color: var(--bg-white);\n    border-color: var(--border-color);\n}\n\n[data-theme=\"dark\"] .accordion-header button {\n    background-color: var(--bg-white);\n    color: var(--text-primary);\n    border-color: var(--border-color);\n}\n\n[data-theme=\"dark\"] .accordion-header button:not(.collapsed) {\n    background-color: var(--bg-dark);\n}\n\n/* Tab Dark Mode */\n[data-theme=\"dark\"] .nav-tabs .nav-link {\n    color: var(--text-primary);\n    border-color: var(--border-color);\n}\n\n[data-theme=\"dark\"] .nav-tabs .nav-link.active {\n    background-color: var(--bg-white);\n    border-color: var(--border-color);\n    color: var(--text-primary);\n}\n\n[data-theme=\"dark\"] .tab-content {\n    color: var(--text-primary);\n}\n\n/* Table Dark Mode - Enhanced */\n[data-theme=\"dark\"] .table-dark {\n    --bs-table-color: #f8f9fa;\n    --bs-table-bg: #212529;\n    --bs-table-border-color: #374151;\n    --bs-table-striped-bg: #2d3748;\n    --bs-table-striped-color: #f8f9fa;\n    --bs-table-active-bg: #374151;\n    --bs-table-active-color: #f8f9fa;\n    --bs-table-hover-bg: #374151;\n    --bs-table-hover-color: #f8f9fa;\n    color: var(--bs-table-color);\n    background-color: var(--bs-table-bg);\n}\n\n[data-theme=\"dark\"] .table-dark th,\n[data-theme=\"dark\"] .table-dark td {\n    border-color: var(--bs-table-border-color);\n    color: #f8f9fa;\n}\n\n[data-theme=\"dark\"] .table-dark thead th {\n    background-color: #374151;\n    border-color: #4b5563;\n    color: #f8f9fa;\n    font-weight: 600;\n}\n\n[data-theme=\"dark\"] .table-dark tbody tr:hover {\n    background-color: var(--bs-table-hover-bg);\n    color: var(--bs-table-hover-color);\n}\n\n[data-theme=\"dark\"] .table-dark tbody tr:hover td,\n[data-theme=\"dark\"] .table-dark tbody tr:hover th {\n    color: #f8f9fa;\n}\n\n/* Smooth transitions for theme switching */\n* {\n    transition: background-color 0.3s ease, color 0.3s ease, border-color 0.3s ease;\n}\n\n/* Scrollbar Styling */\n.sidebar::-webkit-scrollbar {\n    width: 6px;\n}\n\n.sidebar::-webkit-scrollbar-track {\n    background: transparent;\n}\n\n.sidebar::-webkit-scrollbar-thumb {\n    background: var(--border-color);\n    border-radius: 3px;\n}\n\n.sidebar::-webkit-scrollbar-thumb:hover {\n    background: var(--text-muted);\n}\n\n/* Loading states */\n.loading {\n    opacity: 0.6;\n    pointer-events: none;\n}\n\n.spinner {\n    width: 20px;\n    height: 20px;\n    border: 2px solid var(--border-color);\n    border-top: 2px solid var(--primary-color);\n    border-radius: 50%;\n    animation: spin 1s linear infinite;\n}\n\n@keyframes spin {\n    0% { transform: rotate(0deg); }\n    100% { transform: rotate(360deg); }\n}","size_bytes":15332},"public/assets/js/script.js":{"content":"// Dashboard JavaScript\nclass DashboardApp {\n    constructor() {\n        this.sidebarToggle = document.getElementById('sidebarToggle');\n        this.sidebar = document.getElementById('sidebar');\n        this.themeToggle = document.getElementById('themeToggle');\n        this.themeIcon = document.querySelector('.theme-icon');\n        \n        this.init();\n    }\n    \n    init() {\n        console.log('Dashboard initialized');\n        \n        // Initialize theme\n        this.initTheme();\n        \n        // Initialize sidebar\n        this.initSidebar();\n        \n        // Initialize menu interactions\n        this.initMenuInteractions();\n        \n        // Initialize animations\n        this.initAnimations();\n        \n        // Initialize tooltips and popovers\n        this.initBootstrapComponents();\n        \n        // Load dashboard data\n        this.loadDashboardData();\n    }\n    \n    // Theme Management\n    initTheme() {\n        // Check for saved theme preference or default to 'light'\n        const savedTheme = localStorage.getItem('dashboard-theme') || 'light';\n        this.setTheme(savedTheme);\n        \n        // Theme toggle event listener\n        if (this.themeToggle) {\n            this.themeToggle.addEventListener('click', () => {\n                this.toggleTheme();\n            });\n        }\n    }\n    \n    setTheme(theme) {\n        document.documentElement.setAttribute('data-theme', theme);\n        \n        if (this.themeIcon) {\n            if (theme === 'dark') {\n                this.themeIcon.className = 'bi bi-moon theme-icon';\n            } else {\n                this.themeIcon.className = 'bi bi-sun theme-icon';\n            }\n        }\n        \n        // Handle table dark mode\n        this.updateTableTheme(theme);\n        \n        localStorage.setItem('dashboard-theme', theme);\n    }\n    \n    updateTableTheme(theme) {\n        const tables = document.querySelectorAll('table');\n        const theadElements = document.querySelectorAll('thead');\n        \n        tables.forEach(table => {\n            if (theme === 'dark') {\n                // Add table-dark class if not present\n                if (!table.classList.contains('table-dark')) {\n                    table.classList.add('table-dark');\n                }\n            } else {\n                // Remove table-dark class\n                table.classList.remove('table-dark');\n            }\n        });\n        \n        theadElements.forEach(thead => {\n            if (theme === 'dark') {\n                // Change table-light to table-dark\n                if (thead.classList.contains('table-light')) {\n                    thead.classList.remove('table-light');\n                    thead.classList.add('table-dark');\n                }\n                // Also handle case where there's no existing class\n                if (!thead.classList.contains('table-dark') && !thead.classList.contains('table-light')) {\n                    thead.classList.add('table-dark');\n                }\n            } else {\n                // Change table-dark to table-light\n                if (thead.classList.contains('table-dark')) {\n                    thead.classList.remove('table-dark');\n                    thead.classList.add('table-light');\n                }\n                // Also handle case where there's no existing class\n                if (!thead.classList.contains('table-dark') && !thead.classList.contains('table-light')) {\n                    thead.classList.add('table-light');\n                }\n            }\n        });\n    }\n    \n    toggleTheme() {\n        const currentTheme = document.documentElement.getAttribute('data-theme');\n        const newTheme = currentTheme === 'dark' ? 'light' : 'dark';\n        this.setTheme(newTheme);\n        \n        // Show notification\n        this.showNotification(\n            `Switched to ${newTheme} mode`, \n            'info',\n            2000\n        );\n    }\n    \n    // Sidebar Management\n    initSidebar() {\n        if (this.sidebarToggle) {\n            this.sidebarToggle.addEventListener('click', () => {\n                this.toggleSidebar();\n            });\n        }\n        \n        // Close sidebar when clicking outside on mobile\n        document.addEventListener('click', (e) => {\n            if (window.innerWidth <= 992) {\n                const isClickInsideSidebar = this.sidebar?.contains(e.target);\n                const isToggleButton = this.sidebarToggle?.contains(e.target);\n                \n                if (!isClickInsideSidebar && !isToggleButton && this.sidebar?.classList.contains('show')) {\n                    this.closeSidebar();\n                }\n            }\n        });\n        \n        // Handle window resize\n        window.addEventListener('resize', () => {\n            if (window.innerWidth > 992) {\n                this.closeSidebar();\n                this.removeOverlay();\n            }\n        });\n    }\n    \n    toggleSidebar() {\n        if (window.innerWidth <= 992) {\n            // Mobile behavior\n            if (this.sidebar?.classList.contains('show')) {\n                this.closeSidebar();\n            } else {\n                this.openSidebar();\n            }\n        } else {\n            // Desktop behavior - collapse/expand sidebar\n            if (this.sidebar?.classList.contains('collapsed')) {\n                this.expandSidebar();\n            } else {\n                this.collapseSidebar();\n            }\n        }\n    }\n    \n    collapseSidebar() {\n        this.sidebar?.classList.add('collapsed');\n        document.body.classList.add('sidebar-collapsed');\n    }\n    \n    expandSidebar() {\n        this.sidebar?.classList.remove('collapsed');\n        document.body.classList.remove('sidebar-collapsed');\n    }\n    \n    openSidebar() {\n        this.sidebar?.classList.add('show');\n        this.createOverlay();\n    }\n    \n    closeSidebar() {\n        this.sidebar?.classList.remove('show');\n        this.removeOverlay();\n    }\n    \n    createOverlay() {\n        if (!document.querySelector('.sidebar-overlay')) {\n            const overlay = document.createElement('div');\n            overlay.className = 'sidebar-overlay show';\n            overlay.addEventListener('click', () => this.closeSidebar());\n            document.body.appendChild(overlay);\n        }\n    }\n    \n    removeOverlay() {\n        const overlay = document.querySelector('.sidebar-overlay');\n        if (overlay) {\n            overlay.remove();\n        }\n    }\n    \n    // Menu Interactions\n    initMenuInteractions() {\n        const menuLinks = document.querySelectorAll('.menu-link');\n        \n        menuLinks.forEach(link => {\n            link.addEventListener('click', (e) => {\n                // Only prevent default for links with href=\"#\"\n                if (link.getAttribute('href') === '#') {\n                    e.preventDefault();\n                }\n                \n                // Remove active class from all menu items\n                document.querySelectorAll('.menu-item').forEach(item => {\n                    item.classList.remove('active');\n                });\n                \n                // Add active class to clicked item's parent\n                const menuItem = link.closest('.menu-item');\n                if (menuItem) {\n                    menuItem.classList.add('active');\n                }\n                \n                // Close sidebar on mobile after menu selection\n                if (window.innerWidth <= 992) {\n                    this.closeSidebar();\n                }\n                \n                console.log('Menu item clicked:', link.textContent.trim());\n            });\n        });\n    }\n    \n    // Animations\n    initAnimations() {\n        // Add fade-in animation to cards\n        const cards = document.querySelectorAll('.card');\n        \n        const observer = new IntersectionObserver((entries) => {\n            entries.forEach((entry, index) => {\n                if (entry.isIntersecting) {\n                    setTimeout(() => {\n                        entry.target.classList.add('fade-in-up');\n                    }, index * 100);\n                    observer.unobserve(entry.target);\n                }\n            });\n        });\n        \n        cards.forEach(card => {\n            observer.observe(card);\n        });\n    }\n    \n    // Bootstrap Components\n    initBootstrapComponents() {\n        // Initialize tooltips\n        const tooltipTriggerList = [].slice.call(document.querySelectorAll('[data-bs-toggle=\"tooltip\"]'));\n        tooltipTriggerList.map(function (tooltipTriggerEl) {\n            return new bootstrap.Tooltip(tooltipTriggerEl);\n        });\n        \n        // Initialize popovers\n        const popoverTriggerList = [].slice.call(document.querySelectorAll('[data-bs-toggle=\"popover\"]'));\n        popoverTriggerList.map(function (popoverTriggerEl) {\n            return new bootstrap.Popover(popoverTriggerEl);\n        });\n    }\n    \n    // Dashboard Data Loading (Simulated)\n    loadDashboardData() {\n        // Simulate loading states\n        this.showLoadingState();\n        \n        // Simulate API call\n        setTimeout(() => {\n            this.hideLoadingState();\n            this.animateCounters();\n        }, 1000);\n    }\n    \n    showLoadingState() {\n        const statCards = document.querySelectorAll('.stat-card');\n        statCards.forEach(card => {\n            card.classList.add('loading');\n        });\n    }\n    \n    hideLoadingState() {\n        const statCards = document.querySelectorAll('.stat-card');\n        statCards.forEach(card => {\n            card.classList.remove('loading');\n        });\n    }\n    \n    // Counter Animation\n    animateCounters() {\n        const counters = document.querySelectorAll('.stat-card .card-title');\n        \n        counters.forEach(counter => {\n            const target = parseInt(counter.textContent.replace(/,/g, ''));\n            const duration = 2000;\n            const step = target / (duration / 16);\n            let current = 0;\n            \n            const timer = setInterval(() => {\n                current += step;\n                if (current >= target) {\n                    current = target;\n                    clearInterval(timer);\n                }\n                counter.textContent = Math.floor(current).toLocaleString();\n            }, 16);\n        });\n    }\n    \n    // Notification System\n    showNotification(message, type = 'info', duration = 3000) {\n        // Create notification element\n        const notification = document.createElement('div');\n        notification.className = `alert alert-${type} alert-dismissible fade show position-fixed`;\n        notification.style.cssText = `\n            top: 20px; \n            right: 20px; \n            z-index: 1060; \n            min-width: 300px;\n            box-shadow: var(--shadow-lg);\n        `;\n        \n        notification.innerHTML = `\n            <i class=\"bi bi-info-circle me-2\"></i>\n            ${message}\n            <button type=\"button\" class=\"btn-close\" data-bs-dismiss=\"alert\"></button>\n        `;\n        \n        document.body.appendChild(notification);\n        \n        // Auto remove\n        if (duration > 0) {\n            setTimeout(() => {\n                if (notification.parentNode) {\n                    const bsAlert = new bootstrap.Alert(notification);\n                    bsAlert.close();\n                }\n            }, duration);\n        }\n    }\n    \n    // Utility Methods\n    formatNumber(num) {\n        return num.toLocaleString();\n    }\n    \n    formatCurrency(amount) {\n        return new Intl.NumberFormat('en-US', {\n            style: 'currency',\n            currency: 'USD'\n        }).format(amount);\n    }\n    \n    debounce(func, wait) {\n        let timeout;\n        return function executedFunction(...args) {\n            const later = () => {\n                clearTimeout(timeout);\n                func(...args);\n            };\n            clearTimeout(timeout);\n            timeout = setTimeout(later, wait);\n        };\n    }\n}\n\n// Search functionality\nclass SearchManager {\n    constructor() {\n        this.searchInput = document.querySelector('.search-box input');\n        this.init();\n    }\n    \n    init() {\n        if (this.searchInput) {\n            this.searchInput.addEventListener('input', \n                this.debounce(this.handleSearch.bind(this), 300)\n            );\n        }\n    }\n    \n    handleSearch(e) {\n        const query = e.target.value.toLowerCase().trim();\n        console.log('Searching for:', query);\n        \n        if (query.length > 2) {\n            this.performSearch(query);\n        }\n    }\n    \n    performSearch(query) {\n        // Simulate search functionality\n        console.log('Performing search for:', query);\n        \n        // Here you would typically make an API call\n        // For now, we'll just show a notification\n        if (query === 'help') {\n            window.dashboard.showNotification('Search functionality coming soon!', 'info');\n        }\n    }\n    \n    debounce(func, wait) {\n        let timeout;\n        return function executedFunction(...args) {\n            const later = () => {\n                clearTimeout(timeout);\n                func(...args);\n            };\n            clearTimeout(timeout);\n            timeout = setTimeout(later, wait);\n        };\n    }\n}\n\n// Real-time Updates (Simulated)\nclass RealtimeUpdater {\n    constructor() {\n        this.updateInterval = null;\n        this.init();\n    }\n    \n    init() {\n        // Start real-time updates\n        this.startUpdates();\n        \n        // Handle visibility change\n        document.addEventListener('visibilitychange', () => {\n            if (document.hidden) {\n                this.stopUpdates();\n            } else {\n                this.startUpdates();\n            }\n        });\n    }\n    \n    startUpdates() {\n        if (this.updateInterval) return;\n        \n        this.updateInterval = setInterval(() => {\n            this.updateDashboardData();\n        }, 30000); // Update every 30 seconds\n    }\n    \n    stopUpdates() {\n        if (this.updateInterval) {\n            clearInterval(this.updateInterval);\n            this.updateInterval = null;\n        }\n    }\n    \n    updateDashboardData() {\n        // Simulate real-time data updates\n        const statCards = document.querySelectorAll('.stat-card .card-title');\n        \n        statCards.forEach(card => {\n            const currentValue = parseInt(card.textContent.replace(/,/g, ''));\n            const variation = Math.floor(Math.random() * 100) - 50;\n            const newValue = Math.max(0, currentValue + variation);\n            \n            if (variation !== 0) {\n                card.textContent = newValue.toLocaleString();\n                \n                // Add highlight effect\n                card.style.background = 'rgba(255, 255, 255, 0.2)';\n                setTimeout(() => {\n                    card.style.background = '';\n                }, 1000);\n            }\n        });\n    }\n}\n\n// Initialize Dashboard when DOM is loaded\ndocument.addEventListener('DOMContentLoaded', () => {\n    // Initialize main dashboard\n    window.dashboard = new DashboardApp();\n    \n    // Initialize search manager\n    window.searchManager = new SearchManager();\n    \n    // Initialize real-time updater\n    window.realtimeUpdater = new RealtimeUpdater();\n    \n    console.log('🚀 Dashboard fully loaded and ready!');\n});\n\n// Handle page unload\nwindow.addEventListener('beforeunload', () => {\n    if (window.realtimeUpdater) {\n        window.realtimeUpdater.stopUpdates();\n    }\n});\n\n// Export for global access\nwindow.DashboardUtils = {\n    showNotification: (message, type, duration) => {\n        if (window.dashboard) {\n            window.dashboard.showNotification(message, type, duration);\n        }\n    },\n    \n    toggleTheme: () => {\n        if (window.dashboard) {\n            window.dashboard.toggleTheme();\n        }\n    },\n    \n    formatNumber: (num) => num.toLocaleString(),\n    \n    formatCurrency: (amount) => new Intl.NumberFormat('en-US', {\n        style: 'currency',\n        currency: 'USD'\n    }).format(amount)\n};","size_bytes":16067},"resources/views/layouts/app.blade.php":{"content":"<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>@yield('title', 'Dashboard') - {{ config('app.name') }}</title>\n    \n    <!-- Bootstrap 5 CSS CDN -->\n    <link href=\"https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css\" rel=\"stylesheet\">\n    \n    <!-- Bootstrap Icons -->\n    <link href=\"https://cdn.jsdelivr.net/npm/bootstrap-icons@1.10.0/font/bootstrap-icons.css\" rel=\"stylesheet\">\n    \n    <!-- Custom CSS -->\n    <link rel=\"stylesheet\" href=\"{{ asset('assets/css/style.css') }}\">\n    @vite(['resources/css/app.css', 'resources/js/app.js'])\n</head>\n<body>\n    <div class=\"wrapper\">\n        <!-- Sidebar -->\n        @include('layouts.sidebar')\n\n        <!-- Main Content -->\n        <div class=\"main-content\">\n            <!-- Top Navbar -->\n            @include('layouts.navbar')\n\n            <!-- Dashboard Content -->\n            <div class=\"container-fluid p-4\">\n                @yield('content')\n            </div>\n        </div>\n    </div>\n\n    <!-- Bootstrap 5 JS Bundle CDN -->\n    <script src=\"https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js\"></script>\n    \n    <!-- Custom JavaScript -->\n    <script src=\"{{ asset('assets/js/script.js') }}\"></script>\n</body>\n</html>","size_bytes":1331},"resources/views/layouts/navbar.blade.php":{"content":"            <nav class=\"navbar navbar-expand-lg navbar-light bg-white border-bottom\">\n                <div class=\"container-fluid\">\n                    <button class=\"btn btn-link sidebar-toggle me-3\" id=\"sidebarToggle\">\n                        <i class=\"bi bi-list\"></i>\n                    </button>\n                    \n                    <div class=\"search-box me-auto\">\n                        <div class=\"input-group\">\n                            <span class=\"input-group-text bg-transparent border-0\">\n                                <i class=\"bi bi-search text-muted\"></i>\n                            </span>\n                            <input type=\"text\" class=\"form-control border-0\" placeholder=\"Search...\">\n                        </div>\n                    </div>\n                    \n                    <div class=\"navbar-nav flex-row align-items-center\">\n                        <button class=\"btn btn-link me-3\" id=\"themeToggle\" title=\"Toggle Theme\">\n                            <i class=\"bi bi-sun theme-icon\"></i>\n                        </button>\n                        \n                        <div class=\"dropdown me-3\">\n                            <button class=\"btn btn-link position-relative\" data-bs-toggle=\"dropdown\">\n                                <i class=\"bi bi-bell\"></i>\n                                <span class=\"position-absolute top-0 start-100 translate-middle badge rounded-pill bg-danger\">\n                                    0\n                                </span>\n                            </button>\n                            <ul class=\"dropdown-menu dropdown-menu-end\">\n                                <li><h6 class=\"dropdown-header\">Notifications</h6></li>\n                                <li><a class=\"dropdown-item\" href=\"#\">No new notifications</a></li>\n                            </ul>\n                        </div>\n                        \n                        <div class=\"dropdown\">\n                            <button class=\"btn btn-link d-flex align-items-center\" data-bs-toggle=\"dropdown\">\n                                <div class=\"rounded-circle bg-primary d-flex align-items-center justify-content-center me-2\" style=\"width: 32px; height: 32px;\">\n                                    <span class=\"text-white fw-bold\">{{ substr(Auth::user()->name, 0, 1) }}</span>\n                                </div>\n                                <span class=\"me-2\">{{ Auth::user()->name }}</span>\n                                <i class=\"bi bi-chevron-down\"></i>\n                            </button>\n                            <ul class=\"dropdown-menu dropdown-menu-end\">\n                                <li><h6 class=\"dropdown-header\">{{ Auth::user()->email }}</h6></li>\n                                <li><hr class=\"dropdown-divider\"></li>\n                                <li><a class=\"dropdown-item\" href=\"#\"><i class=\"bi bi-person me-2\"></i>Profile</a></li>\n                                <li><a class=\"dropdown-item\" href=\"#\"><i class=\"bi bi-gear me-2\"></i>Settings</a></li>\n                                <li><hr class=\"dropdown-divider\"></li>\n                                <li>\n                                    <form method=\"POST\" action=\"{{ route('logout') }}\" class=\"d-inline\">\n                                        @csrf\n                                        <button type=\"submit\" class=\"dropdown-item text-danger\">\n                                            <i class=\"bi bi-box-arrow-right me-2\"></i>Logout\n                                        </button>\n                                    </form>\n                                </li>\n                            </ul>\n                        </div>\n                    </div>\n                </div>\n            </nav>","size_bytes":3757},"resources/views/layouts/sidebar.blade.php":{"content":"        <nav class=\"sidebar\" id=\"sidebar\">\n            <div class=\"sidebar-header\">\n                <div class=\"d-flex align-items-center\">\n                    <i class=\"bi bi-speedometer2 text-primary me-2\"></i>\n                    <span class=\"fw-bold\">{{ config('app.name') }}</span>\n                </div>\n                <div class=\"mt-2\">\n                    <small class=\"text-muted\">Welcome, {{ Auth::user()->name }}!</small>\n                    <div class=\"mt-1\">\n                        <span class=\"badge bg-{{ Auth::user()->role === 'admin' ? 'danger' : 'primary' }}\">\n                            {{ ucfirst(Auth::user()->role) }}\n                        </span>\n                    </div>\n                </div>\n            </div>\n\n            <div class=\"sidebar-menu\">\n                <ul class=\"list-unstyled\">\n                    <li class=\"menu-item {{ request()->routeIs('dashboard') ? 'active' : '' }}\">\n                        <a href=\"{{ route('dashboard') }}\" class=\"menu-link\" data-title=\"Dashboard\">\n                            <i class=\"bi bi-house-door\"></i>\n                            <span>Dashboard</span>\n                        </a>\n                    </li>\n\n                    @if(Auth::user()->role === 'admin')\n                    <!-- Admin Section -->\n                    <li class=\"menu-header mt-3\">\n                        <span class=\"text-muted small text-uppercase fw-bold\">Admin</span>\n                    </li>\n                    <li class=\"menu-item {{ request()->routeIs('dashboard.users') ? 'active' : '' }}\">\n                        <a href=\"{{ route('dashboard.users') }}\" class=\"menu-link\" data-title=\"Users\">\n                            <i class=\"bi bi-people\"></i>\n                            <span>Users</span>\n                        </a>\n                    </li>\n                    <li class=\"menu-item {{ request()->routeIs('dashboard.categories') ? 'active' : '' }}\">\n                        <a href=\"{{ route('dashboard.categories') }}\" class=\"menu-link\" data-title=\"Categories\">\n                            <i class=\"bi bi-folder\"></i>\n                            <span>Categories</span>\n                        </a>\n                    </li>\n                    @endif\n\n                    <!-- Content Section -->\n                    <li class=\"menu-header mt-3\">\n                        <span class=\"text-muted small text-uppercase fw-bold\">Content</span>\n                    </li>\n                    <li class=\"menu-item {{ request()->routeIs('dashboard.posts') ? 'active' : '' }}\">\n                        <a href=\"{{ route('dashboard.posts') }}\" class=\"menu-link\" data-title=\"Posts\">\n                            <i class=\"bi bi-file-earmark-text\"></i>\n                            <span>Posts</span>\n                        </a>\n                    </li>\n                    <li class=\"menu-item {{ request()->routeIs('dashboard.tags') ? 'active' : '' }}\">\n                        <a href=\"{{ route('dashboard.tags') }}\" class=\"menu-link\" data-title=\"Tags\">\n                            <i class=\"bi bi-tags\"></i>\n                            <span>Tags</span>\n                        </a>\n                    </li>\n                </ul>\n            </div>\n        </nav>\n","size_bytes":3242},"app/Http/Controllers/AuthController.php":{"content":"<?php\n\nnamespace App\\Http\\Controllers;\n\nuse Illuminate\\Http\\Request;\nuse Illuminate\\Support\\Facades\\Auth;\nuse Illuminate\\Support\\Facades\\Hash;\nuse App\\Models\\User;\n\nclass AuthController extends Controller\n{\n    public function showLogin()\n    {\n        return view('auth.login');\n    }\n\n    public function login(Request $request)\n    {\n        $request->validate([\n            'email' => 'required|email',\n            'password' => 'required|min:6',\n        ]);\n\n        $credentials = $request->only('email', 'password');\n\n        if (Auth::attempt($credentials)) {\n            $request->session()->regenerate();\n            \n            // Redirect to dashboard after successful login\n            return redirect()->intended('/dashboard');\n        }\n\n        return back()->withErrors([\n            'email' => 'The provided credentials do not match our records.',\n        ])->withInput();\n    }\n\n    public function logout(Request $request)\n    {\n        Auth::logout();\n        \n        $request->session()->invalidate();\n        $request->session()->regenerateToken();\n        \n        return redirect('/login');\n    }\n}\n","size_bytes":1126},"app/Http/Controllers/DashboardController.php":{"content":"<?php\n\nnamespace App\\Http\\Controllers;\n\nuse Illuminate\\Http\\Request;\nuse Illuminate\\Support\\Facades\\Auth;\n\nclass DashboardController extends Controller\n{\n    public function __construct()\n    {\n        $this->middleware('auth');\n    }\n\n    public function index()\n    {\n        $user = Auth::user();\n        \n        if ($user->role === 'admin') {\n            // Admin sees system-wide statistics\n            $totalUsers = \\App\\Models\\User::count();\n            $totalPosts = \\App\\Models\\Post::count();\n            $totalCategories = \\App\\Models\\Category::count();\n            $totalTags = \\App\\Models\\Tag::count();\n            \n            return view('dashboard.app', compact('totalUsers', 'totalPosts', 'totalCategories', 'totalTags'));\n        } else {\n            // Regular users see their own statistics\n            $myPosts = \\App\\Models\\Post::where('author_id', $user->id)->count();\n            $myTags = \\App\\Models\\Tag::where('created_by', $user->id)->count();\n            $draftPosts = \\App\\Models\\Post::where('author_id', $user->id)->where('status', 'draft')->count();\n            $publishedPosts = \\App\\Models\\Post::where('author_id', $user->id)->where('status', 'published')->count();\n            \n            return view('dashboard.app', compact('myPosts', 'myTags', 'draftPosts', 'publishedPosts'));\n        }\n    }\n\n    // Admin-only features\n    public function users()\n    {\n        $this->authorize('admin-access');\n        $users = \\App\\Models\\User::paginate(10);\n        return view('dashboard.users.index', compact('users'));\n    }\n\n    public function categories()\n    {\n        $this->authorize('admin-access');\n        // Categories management logic will go here\n        return view('dashboard.categories.index');\n    }\n\n    // Both admin and user features  \n    public function posts()\n    {\n        $user = Auth::user();\n        \n        if ($user->role === 'admin') {\n            // Admin can see all posts\n            $posts = \\App\\Models\\Post::with(['author', 'category'])->paginate(10);\n        } else {\n            // User can only see their own posts\n            $posts = \\App\\Models\\Post::where('author_id', $user->id)->with(['category'])->paginate(10);\n        }\n        \n        return view('dashboard.posts.index', compact('posts'));\n    }\n\n    public function tags()\n    {\n        $user = Auth::user();\n        \n        if ($user->role === 'admin') {\n            // Admin can see all tags\n            $tags = \\App\\Models\\Tag::with('creator')->paginate(10);\n        } else {\n            // User can only see tags they created\n            $tags = \\App\\Models\\Tag::where('created_by', $user->id)->paginate(10);\n        }\n        \n        return view('dashboard.tags.index', compact('tags'));\n    }\n}\n","size_bytes":2737},"app/Http/Middleware/RoleMiddleware.php":{"content":"<?php\n\nnamespace App\\Http\\Middleware;\n\nuse Closure;\nuse Illuminate\\Http\\Request;\nuse Symfony\\Component\\HttpFoundation\\Response;\nuse Illuminate\\Support\\Facades\\Auth;\n\nclass RoleMiddleware\n{\n    /**\n     * Handle an incoming request.\n     *\n     * @param  \\Closure(\\Illuminate\\Http\\Request): (\\Symfony\\Component\\HttpFoundation\\Response)  $next\n     */\n    public function handle(Request $request, Closure $next, string $role): Response\n    {\n        if (!Auth::check()) {\n            return redirect('/login');\n        }\n\n        $user = Auth::user();\n        \n        if ($user->role !== $role) {\n            abort(403, 'Unauthorized access');\n        }\n\n        return $next($request);\n    }\n}\n","size_bytes":694},"app/Models/Category.php":{"content":"<?php\n\nnamespace App\\Models;\n\nuse Illuminate\\Database\\Eloquent\\Model;\n\nclass Category extends Model\n{\n    protected $fillable = [\n        'name',\n        'slug',\n        'description',\n        'parent_id',\n        'created_by',\n        'status',\n    ];\n\n    // Relationships\n    public function creator()\n    {\n        return $this->belongsTo(User::class, 'created_by');\n    }\n\n    public function parent()\n    {\n        return $this->belongsTo(Category::class, 'parent_id');\n    }\n\n    public function children()\n    {\n        return $this->hasMany(Category::class, 'parent_id');\n    }\n\n    public function posts()\n    {\n        return $this->hasMany(Post::class);\n    }\n}\n","size_bytes":674},"app/Models/Post.php":{"content":"<?php\n\nnamespace App\\Models;\n\nuse Illuminate\\Database\\Eloquent\\Model;\n\nclass Post extends Model\n{\n    protected $fillable = [\n        'title',\n        'slug',\n        'content',\n        'excerpt',\n        'featured_image',\n        'status',\n        'published_at',\n        'author_id',\n        'category_id',\n        'views',\n        'meta_title',\n        'meta_description',\n    ];\n\n    protected function casts(): array\n    {\n        return [\n            'published_at' => 'datetime',\n        ];\n    }\n\n    // Relationships\n    public function author()\n    {\n        return $this->belongsTo(User::class, 'author_id');\n    }\n\n    public function category()\n    {\n        return $this->belongsTo(Category::class);\n    }\n\n    public function tags()\n    {\n        return $this->belongsToMany(Tag::class);\n    }\n}\n","size_bytes":811},"app/Models/Tag.php":{"content":"<?php\n\nnamespace App\\Models;\n\nuse Illuminate\\Database\\Eloquent\\Model;\n\nclass Tag extends Model\n{\n    protected $fillable = [\n        'name',\n        'slug',\n        'description',\n        'created_by',\n    ];\n\n    // Relationships\n    public function creator()\n    {\n        return $this->belongsTo(User::class, 'created_by');\n    }\n\n    public function posts()\n    {\n        return $this->belongsToMany(Post::class);\n    }\n}\n","size_bytes":426},"app/Providers/AuthServiceProvider.php":{"content":"<?php\n\nnamespace App\\Providers;\n\nuse Illuminate\\Foundation\\Support\\Providers\\AuthServiceProvider as ServiceProvider;\nuse Illuminate\\Support\\Facades\\Gate;\n\nclass AuthServiceProvider extends ServiceProvider\n{\n    /**\n     * The model to policy mappings for the application.\n     *\n     * @var array<class-string, class-string>\n     */\n    protected $policies = [\n        //\n    ];\n\n    /**\n     * Register services.\n     */\n    public function register(): void\n    {\n        //\n    }\n\n    /**\n     * Bootstrap services.\n     */\n    public function boot(): void\n    {\n        Gate::define('admin-access', function ($user) {\n            return $user->role === 'admin';\n        });\n    }\n}\n","size_bytes":685},"database/migrations/2025_09_13_053236_create_categories_table.php":{"content":"<?php\n\nuse Illuminate\\Database\\Migrations\\Migration;\nuse Illuminate\\Database\\Schema\\Blueprint;\nuse Illuminate\\Support\\Facades\\Schema;\n\nreturn new class extends Migration\n{\n    /**\n     * Run the migrations.\n     */\n    public function up(): void\n    {\n        Schema::create('categories', function (Blueprint $table) {\n            $table->id();\n            $table->string('name');\n            $table->string('slug')->unique();\n            $table->text('description')->nullable();\n            $table->unsignedBigInteger('parent_id')->nullable()->default(null);\n            $table->unsignedBigInteger('created_by');\n            $table->enum('status', ['active', 'inactive'])->default('active');\n            $table->timestamps();\n            \n            // Indexes\n            $table->index('parent_id');\n            $table->index('created_by');\n            $table->index('status');\n            \n            // Foreign Keys\n            $table->foreign('parent_id')->references('id')->on('categories')->onDelete('SET NULL');\n            $table->foreign('created_by')->references('id')->on('users')->onDelete('CASCADE');\n        });\n    }\n\n    /**\n     * Reverse the migrations.\n     */\n    public function down(): void\n    {\n        Schema::dropIfExists('categories');\n    }\n};\n","size_bytes":1275},"database/migrations/2025_09_13_053237_create_posts_table.php":{"content":"<?php\n\nuse Illuminate\\Database\\Migrations\\Migration;\nuse Illuminate\\Database\\Schema\\Blueprint;\nuse Illuminate\\Support\\Facades\\Schema;\n\nreturn new class extends Migration\n{\n    /**\n     * Run the migrations.\n     */\n    public function up(): void\n    {\n        Schema::create('posts', function (Blueprint $table) {\n            $table->id();\n            $table->string('title');\n            $table->string('slug')->unique();\n            $table->text('content');\n            $table->text('excerpt')->nullable();\n            $table->string('featured_image')->nullable();\n            $table->enum('status', ['published', 'draft', 'pending'])->default('draft');\n            $table->timestamp('published_at')->nullable();\n            $table->unsignedBigInteger('author_id');\n            $table->unsignedBigInteger('category_id')->nullable();\n            $table->unsignedInteger('views')->default(0);\n            $table->string('meta_title')->nullable();\n            $table->text('meta_description')->nullable();\n            $table->timestamps();\n            \n            // Indexes\n            $table->index('author_id');\n            $table->index('category_id');\n            $table->index('status');\n            $table->index('published_at');\n            \n            // Foreign Keys\n            $table->foreign('author_id')->references('id')->on('users')->onDelete('CASCADE');\n            $table->foreign('category_id')->references('id')->on('categories')->onDelete('SET NULL');\n        });\n    }\n\n    /**\n     * Reverse the migrations.\n     */\n    public function down(): void\n    {\n        Schema::dropIfExists('posts');\n    }\n};\n","size_bytes":1627},"database/migrations/2025_09_13_053239_create_tags_table.php":{"content":"<?php\n\nuse Illuminate\\Database\\Migrations\\Migration;\nuse Illuminate\\Database\\Schema\\Blueprint;\nuse Illuminate\\Support\\Facades\\Schema;\n\nreturn new class extends Migration\n{\n    /**\n     * Run the migrations.\n     */\n    public function up(): void\n    {\n        Schema::create('tags', function (Blueprint $table) {\n            $table->id();\n            $table->string('name');\n            $table->string('slug')->unique();\n            $table->text('description')->nullable();\n            $table->unsignedBigInteger('created_by');\n            $table->timestamps();\n            \n            // Indexes\n            $table->index('created_by');\n            \n            // Foreign Keys\n            $table->foreign('created_by')->references('id')->on('users')->onDelete('CASCADE');\n        });\n    }\n\n    /**\n     * Reverse the migrations.\n     */\n    public function down(): void\n    {\n        Schema::dropIfExists('tags');\n    }\n};\n","size_bytes":927},"database/migrations/2025_09_13_053240_create_post_tag_table.php":{"content":"<?php\n\nuse Illuminate\\Database\\Migrations\\Migration;\nuse Illuminate\\Database\\Schema\\Blueprint;\nuse Illuminate\\Support\\Facades\\Schema;\n\nreturn new class extends Migration\n{\n    /**\n     * Run the migrations.\n     */\n    public function up(): void\n    {\n        Schema::create('post_tag', function (Blueprint $table) {\n            $table->id();\n            $table->unsignedBigInteger('post_id');\n            $table->unsignedBigInteger('tag_id');\n            $table->timestamps();\n            \n            // Indexes\n            $table->unique(['post_id', 'tag_id'], 'post_id_tag_id');\n            $table->index('post_id');\n            $table->index('tag_id');\n            \n            // Foreign Keys\n            $table->foreign('post_id')->references('id')->on('posts')->onDelete('CASCADE');\n            $table->foreign('tag_id')->references('id')->on('tags')->onDelete('CASCADE');\n        });\n    }\n\n    /**\n     * Reverse the migrations.\n     */\n    public function down(): void\n    {\n        Schema::dropIfExists('post_tag');\n    }\n};\n","size_bytes":1037},"database/seeders/UserSeeder.php":{"content":"<?php\n\nnamespace Database\\Seeders;\n\nuse Illuminate\\Database\\Console\\Seeds\\WithoutModelEvents;\nuse Illuminate\\Database\\Seeder;\nuse App\\Models\\User;\nuse Illuminate\\Support\\Facades\\Hash;\n\nclass UserSeeder extends Seeder\n{\n    /**\n     * Run the database seeds.\n     */\n    public function run(): void\n    {\n        // Create admin user\n        User::create([\n            'name' => 'Admin User',\n            'email' => 'admin@example.com',\n            'password' => Hash::make('password123'),\n            'role' => 'admin',\n            'status' => 'active',\n            'bio' => 'System Administrator',\n        ]);\n\n        // Create regular user\n        User::create([\n            'name' => 'John Doe',\n            'email' => 'user@example.com',\n            'password' => Hash::make('password123'),\n            'role' => 'user',\n            'status' => 'active',\n            'bio' => 'Content Writer',\n        ]);\n\n        // Create additional test users\n        User::create([\n            'name' => 'Jane Smith',\n            'email' => 'jane@example.com',\n            'password' => Hash::make('password123'),\n            'role' => 'user',\n            'status' => 'active',\n            'bio' => 'Blog Author',\n        ]);\n    }\n}\n","size_bytes":1227},"replit.md":{"content":"# Aplikasi Blog Laravel - Dokumentasi Lengkap\n\n## Deskripsi Aplikasi\n\nAplikasi Blog Laravel adalah platform blogging modern yang dibangun dengan Laravel 12 dan Bootstrap 5. Aplikasi ini menyediakan sistem manajemen konten lengkap dengan fitur autentikasi berbasis role, dashboard admin yang intuitif, dan tampilan blog public yang responsif.\n\n## Preferensi Pengguna\n\nGaya komunikasi yang disukai: Bahasa sederhana sehari-hari dalam bahasa Indonesia.\n\n## Use Case (Kasus Penggunaan)\n\n### 1. Use Case Utama\n\n#### UC-001: Pengunjung Membaca Blog\n**Aktor**: Pengunjung (Guest User)\n**Tujuan**: Membaca artikel blog yang tersedia\n**Skenario**:\n1. Pengunjung mengakses halaman utama (/)\n2. Sistem menampilkan daftar artikel yang dipublikasi\n3. Pengunjung melihat preview artikel (judul, excerpt, kategori, tags)\n4. Pengunjung mengklik artikel untuk membaca selengkapnya\n5. Sistem menampilkan artikel lengkap dengan konten markdown\n6. Sistem mencatat view count artikel\n7. Pengunjung dapat share artikel ke media sosial\n\n#### UC-002: User Login ke Dashboard\n**Aktor**: User (Admin/Regular User)\n**Tujuan**: Mengakses dashboard untuk mengelola konten\n**Skenario**:\n1. User mengakses halaman login (/login)\n2. User memasukkan email dan password\n3. Sistem memvalidasi kredensial\n4. Sistem redirect ke dashboard sesuai role\n5. Dashboard menampilkan menu berdasarkan hak akses\n\n#### UC-003: Admin Mengelola Artikel\n**Aktor**: Admin\n**Tujuan**: Membuat, mengedit, dan mengelola artikel blog\n**Skenario**:\n1. Admin login ke dashboard\n2. Admin mengakses menu \"Posts\"\n3. Admin dapat melihat daftar semua artikel\n4. Admin dapat membuat artikel baru dengan editor markdown\n5. Admin mengisi judul, konten, kategori, dan tags\n6. Admin mempublikasi artikel\n7. Artikel muncul di halaman public\n\n#### UC-004: User Menulis Artikel\n**Aktor**: Regular User\n**Tujuan**: Menulis artikel blog\n**Skenario**:\n1. User login ke dashboard\n2. User mengakses menu \"Posts\" (terbatas)\n3. User dapat melihat artikel yang dibuatnya\n4. User membuat artikel baru\n5. Artikel tersimpan sebagai draft (perlu approval admin)\n\n### 2. Use Case Pendukung\n\n#### UC-005: Manajemen Kategori\n- Admin dapat membuat, mengedit, dan menghapus kategori\n- Setiap kategori memiliki nama, slug, dan deskripsi\n- Artikel dapat dikaitkan dengan kategori\n\n#### UC-006: Manajemen Tags\n- Admin dan User dapat membuat tags\n- Tags digunakan untuk menandai artikel\n- Sistem mendukung multiple tags per artikel\n\n#### UC-007: Manajemen Users (Admin Only)\n- Admin dapat melihat daftar semua user\n- Admin dapat mengubah role user\n- Admin dapat menghapus user\n\n## Flowchart Aplikasi\n\n### 1. Alur Pengunjung Public\n\n```\n[START] \n   ↓\n[Akses halaman utama (/)]\n   ↓\n[Tampilkan daftar artikel dengan pagination]\n   ↓\n[Pilih artikel untuk dibaca?] → Ya → [Tampilkan artikel lengkap] → [Increment view count] → [Tampilkan related posts]\n   ↓ Tidak                         ↓\n[Browse artikel lain]              [Share artikel ke sosmed?] → Ya → [Buka share dialog]\n   ↓                               ↓ Tidak\n[END]                             [Kembali ke daftar artikel] → [END]\n```\n\n### 2. Alur Autentikasi User\n\n```\n[START]\n   ↓\n[Akses /login]\n   ↓\n[Input email & password]\n   ↓\n[Validasi kredensial] → Invalid → [Tampilkan error] → [Kembali ke form login]\n   ↓ Valid\n[Check user role]\n   ↓\n[Role = Admin?] → Ya → [Redirect ke Dashboard Admin] → [Show full sidebar menu]\n   ↓ Tidak              ↓\n[Redirect ke Dashboard User] → [Show limited sidebar menu]\n   ↓\n[END]\n```\n\n### 3. Alur Manajemen Artikel (Admin)\n\n```\n[Admin Dashboard]\n   ↓\n[Klik menu \"Posts\"]\n   ↓\n[Tampilkan daftar semua artikel]\n   ↓\n[Pilih aksi] → [View] → [Tampilkan detail artikel]\n   ↓          [Edit] → [Form edit artikel] → [Update artikel]\n   ↓          [Delete] → [Konfirmasi hapus] → [Hapus artikel]\n[Create New Post]\n   ↓\n[Form artikel baru]\n   ↓\n[Input: Judul, Konten (Markdown), Kategori, Tags, Status]\n   ↓\n[Validasi form] → Invalid → [Tampilkan error]\n   ↓ Valid\n[Simpan artikel]\n   ↓\n[Status = Published?] → Ya → [Artikel muncul di public]\n   ↓ Tidak                  ↓\n[Simpan sebagai draft]     [Send notification]\n   ↓                       ↓\n[END]                     [END]\n```\n\n### 4. Alur User Menulis Artikel\n\n```\n[User Dashboard]\n   ↓\n[Klik menu \"Posts\"]\n   ↓\n[Tampilkan artikel user saja]\n   ↓\n[Create New Post]\n   ↓\n[Form artikel baru]\n   ↓\n[Input: Judul, Konten, Kategori, Tags]\n   ↓\n[Validasi form] → Invalid → [Tampilkan error]\n   ↓ Valid\n[Simpan sebagai draft]\n   ↓\n[Notifikasi: \"Artikel perlu approval admin\"]\n   ↓\n[END]\n```\n\n## Arsitektur Sistem\n\n### Backend Framework\nAplikasi dibangun dengan Laravel 12 yang menyediakan:\n- **Arsitektur MVC**: Pemisahan yang jelas antara Model, View, dan Controller\n- **Eloquent ORM**: Abstraksi database untuk manajemen data\n- **Artisan CLI**: Interface command-line untuk tugas development\n- **Service Container**: Dependency injection untuk manajemen class dependencies\n- **Middleware Pipeline**: Filtering dan processing request/response\n- **Routing Engine**: RESTful routing dengan parameter binding dan middleware\n\n### Frontend Architecture\nFrontend menggunakan pendekatan kompilasi asset modern:\n- **Vite Build Tool**: Server development cepat dan build production yang optimal\n- **Bootstrap 5**: Framework CSS yang responsive dan component-based\n- **Bootstrap Icons**: Icon library yang konsisten\n- **JavaScript Modules**: Sistem module ES6+ dengan hot module replacement\n- **Asset Pipeline**: Pemrosesan otomatis CSS dan JavaScript\n\n### Database Layer\nAplikasi dikonfigurasi untuk berbagai opsi database:\n- **Migration System**: Manajemen schema database dengan version control\n- **Seeder Support**: Populasi database untuk development dan testing\n- **Query Builder**: Interface fluent untuk operasi database\n- **Connection Management**: Dukungan untuk multiple koneksi database\n\n### UI Components\nInterface dashboard meliputi:\n- **Responsive Design**: Pendekatan mobile-first dengan Bootstrap 5\n- **Navigation System**: Sidebar dinamis berdasarkan role user\n- **Interactive Elements**: Fungsi dashboard yang didukung JavaScript\n- **Component Architecture**: Komponen UI yang dapat digunakan ulang\n\n## Struktur Database\n\n### Tabel Users\n```sql\n- id (Primary Key)\n- name (varchar)\n- email (varchar, unique)\n- email_verified_at (timestamp)\n- password (varchar, hashed)\n- role (enum: admin, user)\n- bio (text, nullable)\n- created_at, updated_at (timestamps)\n```\n\n### Tabel Categories\n```sql\n- id (Primary Key)\n- name (varchar)\n- slug (varchar, unique)\n- description (text, nullable)\n- created_by (Foreign Key → users.id)\n- created_at, updated_at (timestamps)\n```\n\n### Tabel Tags\n```sql\n- id (Primary Key)\n- name (varchar)\n- slug (varchar, unique)\n- description (text, nullable)\n- created_by (Foreign Key → users.id)\n- created_at, updated_at (timestamps)\n```\n\n### Tabel Posts\n```sql\n- id (Primary Key)\n- title (varchar)\n- slug (varchar, unique)\n- excerpt (text)\n- content (longtext, markdown)\n- author_id (Foreign Key → users.id)\n- category_id (Foreign Key → categories.id)\n- status (enum: draft, published)\n- views (integer, default 0)\n- published_at (timestamp, nullable)\n- created_at, updated_at (timestamps)\n```\n\n### Tabel Post_Tag (Many-to-Many)\n```sql\n- post_id (Foreign Key → posts.id)\n- tag_id (Foreign Key → tags.id)\n- Primary Key: (post_id, tag_id)\n```\n\n## Sistem Role dan Permissions\n\n### Role Admin\n**Akses Dashboard**:\n- ✅ Users Management (CRUD)\n- ✅ Categories Management (CRUD)\n- ✅ Posts Management (CRUD semua post)\n- ✅ Tags Management (CRUD)\n- ✅ View all statistics\n\n**Akses Public**:\n- ✅ Baca semua artikel\n- ✅ Share artikel\n- ✅ Comment (jika diimplementasi)\n\n### Role User\n**Akses Dashboard**:\n- ❌ Users Management\n- ❌ Categories Management\n- ✅ Posts Management (hanya post sendiri)\n- ✅ Tags Management (CRUD)\n- ✅ View personal statistics\n\n**Akses Public**:\n- ✅ Baca semua artikel\n- ✅ Share artikel\n- ✅ Comment (jika diimplementasi)\n\n### Guest (Non-authenticated)\n**Akses**:\n- ✅ Baca artikel public\n- ✅ Share artikel\n- ✅ Search artikel (jika diimplementasi)\n- ❌ Akses dashboard\n\n## Dependencies Eksternal\n\n### Core Framework Dependencies\n- **Laravel Framework**: Framework web utama untuk routing, ORM, templating, dan autentikasi\n- **Laravel Tinker**: Shell interaktif untuk debugging dan testing aplikasi\n- **Laravel Prompts**: Handling input command-line dengan validasi\n- **Laravel Serializable Closure**: Serialisasi closure yang aman untuk job queues\n\n### HTTP dan Networking\n- **Guzzle HTTP**: Library HTTP client untuk komunikasi API eksternal\n- **PSR-7 Implementation**: Interface standar untuk HTTP message\n- **Fruitcake CORS**: Middleware Cross-Origin Resource Sharing\n\n### Frontend Build Tools\n- **Vite**: Build tool modern dengan hot module replacement\n- **Laravel Vite Plugin**: Integrasi Laravel untuk kompilasi asset Vite\n- **Bootstrap 5**: Framework CSS yang responsive dan component-based\n- **Bootstrap Icons**: Icon library untuk interface\n- **Axios**: HTTP client berbasis promise untuk browser requests\n\n### Utility Libraries\n- **Carbon**: Library manipulasi tanggal dan waktu\n- **Monolog**: Solusi logging yang komprehensif\n- **Ramsey UUID**: Generasi dan validasi UUID\n- **Doctrine Inflector**: Manipulasi string untuk pluralisasi\n- **League CommonMark**: Parsing dan rendering Markdown\n- **League Flysystem**: Layer abstraksi filesystem\n\n### Development dan Testing\n- **Faker**: Generasi data testing\n- **Mockery**: Framework test doubles dan mocking\n- **Collision**: Interface error reporting dan debugging\n- **Laravel Pail**: Viewing dan monitoring log\n\n## Konfigurasi Environment\n\n### Environment Variables Utama\n```env\n# Aplikasi\nAPP_NAME=\"Laravel Blog\"\nAPP_ENV=local\nAPP_DEBUG=true\nAPP_URL=https://your-replit-url.com\n\n# Database\nDB_CONNECTION=sqlite\nDB_DATABASE=database/database.sqlite\n\n# Session & Cache\nSESSION_DRIVER=file\nCACHE_DRIVER=file\n\n# Vite (Development)\nVITE_APP_NAME=\"${APP_NAME}\"\n```\n\n### Konfigurasi Replit\nKonfigurasi deployment:\n- **Workflow**: Menggunakan workflow \"Laravel App\" yang dikonfigurasi untuk menjalankan Laravel server dan Vite\n- **Environment Variables**: Dikonfigurasi langsung dalam workflow command\n- **Database**: SQLite file di database/database.sqlite\n\n## Testing dan Quality Assurance\n\n### Test Accounts\n```\nAdmin Test Account:\n- Email: admin@example.com\n- Password: password123\n- Role: admin\n\nUser Test Account:\n- Email: user@example.com\n- Password: password123\n- Role: user\n```\n\n### Sample Data\nAplikasi include data sample untuk testing:\n- **2 Kategori**: Technology, Business\n- **3 Tags**: Web Development, Laravel, Startup\n- **3 Artikel**: Konten lengkap dengan markdown formatting\n\n### Testing Checklist\n- [ ] Login/Logout functionality\n- [ ] Role-based dashboard access\n- [ ] Article CRUD operations\n- [ ] Public blog display\n- [ ] Markdown rendering\n- [ ] View tracking\n- [ ] Responsive design\n- [ ] Social sharing\n\n## Deployment dan Production\n\n### Replit Deployment\n- Otomatis deploy saat push ke repository\n- Environment variables dikonfigurasi otomatis\n- Database SQLite untuk development\n- SSL/HTTPS otomatis tersedia\n\n### Local Development\n```bash\n# Clone repository\ngit clone <repository-url>\ncd laravel-blog\n\n# Install dependencies\ncomposer install\nnpm install\n\n# Setup environment\ncp .env.example .env\nphp artisan key:generate\n\n# Setup database\nphp artisan migrate\nphp artisan db:seed\n\n# Start development\nnpm run dev\nphp artisan serve\n```\n\n## Troubleshooting\n\n### Common Issues\n\n#### 1. Database Error\n**Problem**: Migration atau seeding gagal\n**Solution**: \n- Pastikan file database.sqlite ada di folder database/\n- Jalankan `php artisan migrate:fresh --seed`\n\n#### 2. Asset Loading Error\n**Problem**: CSS/JS tidak load\n**Solution**:\n- Pastikan Vite running (`npm run dev`)\n- Check environment variables APP_URL\n\n#### 3. Permission Error\n**Problem**: File permission error\n**Solution**:\n- Set permission folder storage: `chmod -R 755 storage`\n- Set permission folder bootstrap/cache: `chmod -R 755 bootstrap/cache`\n\n### Debug Mode\nUntuk debugging, aktifkan:\n```env\nAPP_DEBUG=true\nLOG_LEVEL=debug\n```\n\n## Roadmap dan Future Features\n\n### Phase 1 (Completed)\n- ✅ Basic authentication system\n- ✅ Role-based dashboard\n- ✅ Article management (CRUD)\n- ✅ Public blog with markdown support\n- ✅ Categories and tags system\n\n### Phase 2 (Planned)\n- [ ] Comment system\n- [ ] Article search functionality  \n- [ ] User profile management\n- [ ] Email notifications\n- [ ] Theme system (light/dark mode)\n\n### Phase 3 (Future)\n- [ ] API endpoints for mobile app\n- [ ] Advanced editor (WYSIWYG)\n- [ ] Multi-language support\n- [ ] SEO optimization\n- [ ] Analytics dashboard\n\n## Kontribusi dan Development\n\n### Git Workflow\n1. Fork repository\n2. Create feature branch: `git checkout -b feature/amazing-feature`\n3. Commit changes: `git commit -m 'Add amazing feature'`\n4. Push branch: `git push origin feature/amazing-feature`\n5. Create Pull Request\n\n### Code Standards\n- Follow PSR-12 coding standards\n- Use Laravel best practices\n- Write meaningful commit messages\n- Add comments for complex logic\n- Test before pushing\n\n### Support dan Dokumentasi\n- GitHub Issues untuk bug reports\n- Documentation di README.md\n- Code comments dalam bahasa Inggris\n- User-facing messages dalam bahasa Indonesia\n\n---\n\n**Aplikasi ini siap digunakan untuk kebutuhan blogging modern dengan fitur lengkap dan interface yang user-friendly! 🚀**","size_bytes":13557},"resources/views/auth/login.blade.php":{"content":"<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>Login - {{ config('app.name') }}</title>\n    @vite(['resources/css/app.css', 'resources/js/app.js'])\n</head>\n<body class=\"bg-gray-100 min-h-screen flex items-center justify-center\">\n    <div class=\"max-w-md w-full bg-white rounded-lg shadow-md p-6\">\n        <div class=\"text-center mb-6\">\n            <h1 class=\"text-2xl font-bold text-gray-900\">Sign In</h1>\n            <p class=\"text-gray-600 mt-2\">Welcome back! Please sign in to your account.</p>\n        </div>\n\n        @if ($errors->any())\n            <div class=\"bg-red-100 border border-red-400 text-red-700 px-4 py-3 rounded mb-4\">\n                <ul class=\"list-disc list-inside\">\n                    @foreach ($errors->all() as $error)\n                        <li>{{ $error }}</li>\n                    @endforeach\n                </ul>\n            </div>\n        @endif\n\n        <form method=\"POST\" action=\"{{ route('login') }}\">\n            @csrf\n            \n            <div class=\"mb-4\">\n                <label for=\"email\" class=\"block text-sm font-medium text-gray-700 mb-2\">Email Address</label>\n                <input \n                    type=\"email\" \n                    id=\"email\" \n                    name=\"email\" \n                    value=\"{{ old('email') }}\" \n                    required \n                    class=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\n                    placeholder=\"Enter your email\"\n                >\n            </div>\n\n            <div class=\"mb-6\">\n                <label for=\"password\" class=\"block text-sm font-medium text-gray-700 mb-2\">Password</label>\n                <input \n                    type=\"password\" \n                    id=\"password\" \n                    name=\"password\" \n                    required \n                    class=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\n                    placeholder=\"Enter your password\"\n                >\n            </div>\n\n            <button \n                type=\"submit\" \n                class=\"w-full bg-blue-600 text-white py-2 px-4 rounded-md hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:ring-offset-2 transition duration-200\"\n            >\n                Sign In\n            </button>\n        </form>\n    </div>\n</body>\n</html>","size_bytes":2557},"resources/views/dashboard/categories/index.blade.php":{"content":"@extends('layouts.app')\n\n@section('title', 'Categories Management')\n\n@section('content')\n<div class=\"mb-6\">\n    <h1 class=\"text-2xl font-bold text-gray-900\">Categories Management</h1>\n    <p class=\"text-gray-600 mt-1\">Organize your content with categories</p>\n</div>\n\n<div class=\"bg-white rounded-lg shadow\">\n    <div class=\"px-6 py-4 border-b border-gray-200\">\n        <h2 class=\"text-lg font-medium text-gray-900\">Categories</h2>\n    </div>\n    \n    <div class=\"p-6\">\n        <div class=\"text-center py-12\">\n            <svg class=\"mx-auto h-12 w-12 text-gray-400\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M19 11H5m14-7H3a2 2 0 00-2 2v14a2 2 0 002 2h16a2 2 0 002-2V6a2 2 0 00-2-2z\"></path>\n            </svg>\n            <h3 class=\"mt-2 text-sm font-medium text-gray-900\">No categories yet</h3>\n            <p class=\"mt-1 text-sm text-gray-500\">Get started by creating your first category.</p>\n        </div>\n    </div>\n</div>\n@endsection","size_bytes":1043},"resources/views/dashboard/index.blade.php":{"content":"@extends('layouts.dashboard')\n\n@section('title', 'Dashboard')\n\n@section('content')\n<div class=\"mb-6\">\n    <h1 class=\"text-2xl font-bold text-gray-900\">Dashboard</h1>\n    <p class=\"text-gray-600 mt-1\">Welcome back, {{ $user->name }}!</p>\n</div>\n\n<div class=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6 mb-6\">\n    @if($user->role === 'admin')\n    <div class=\"bg-white rounded-lg shadow p-6\">\n        <div class=\"flex items-center\">\n            <div class=\"p-2 bg-blue-100 rounded-lg\">\n                <svg class=\"w-6 h-6 text-blue-600\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                    <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M12 4.354a4 4 0 110 5.292M15 21H3v-1a6 6 0 0112 0v1zm0 0h6v-1a6 6 0 00-9-5.197m13.5-.5a3 3 0 11-6 0 3 3 0 016 0z\"></path>\n                </svg>\n            </div>\n            <div class=\"ml-4\">\n                <p class=\"text-sm font-medium text-gray-600\">Total Users</p>\n                <p class=\"text-2xl font-bold text-gray-900\">{{ App\\Models\\User::count() }}</p>\n            </div>\n        </div>\n    </div>\n\n    <div class=\"bg-white rounded-lg shadow p-6\">\n        <div class=\"flex items-center\">\n            <div class=\"p-2 bg-green-100 rounded-lg\">\n                <svg class=\"w-6 h-6 text-green-600\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                    <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M19 11H5m14-7H3a2 2 0 00-2 2v14a2 2 0 002 2h16a2 2 0 002-2V6a2 2 0 00-2-2z\"></path>\n                </svg>\n            </div>\n            <div class=\"ml-4\">\n                <p class=\"text-sm font-medium text-gray-600\">Categories</p>\n                <p class=\"text-2xl font-bold text-gray-900\">{{ App\\Models\\Category::count() }}</p>\n            </div>\n        </div>\n    </div>\n    @endif\n\n    <div class=\"bg-white rounded-lg shadow p-6\">\n        <div class=\"flex items-center\">\n            <div class=\"p-2 bg-purple-100 rounded-lg\">\n                <svg class=\"w-6 h-6 text-purple-600\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                    <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M9 12h6m-6 4h6m2 5H7a2 2 0 01-2-2V5a2 2 0 012-2h5.586a1 1 0 01.707.293l5.414 5.414a1 1 0 01.293.707V19a2 2 0 01-2 2z\"></path>\n                </svg>\n            </div>\n            <div class=\"ml-4\">\n                <p class=\"text-sm font-medium text-gray-600\">\n                    @if($user->role === 'admin') All Posts @else My Posts @endif\n                </p>\n                <p class=\"text-2xl font-bold text-gray-900\">\n                    @if($user->role === 'admin')\n                        {{ App\\Models\\Post::count() }}\n                    @else\n                        {{ App\\Models\\Post::where('author_id', $user->id)->count() }}\n                    @endif\n                </p>\n            </div>\n        </div>\n    </div>\n\n    <div class=\"bg-white rounded-lg shadow p-6\">\n        <div class=\"flex items-center\">\n            <div class=\"p-2 bg-yellow-100 rounded-lg\">\n                <svg class=\"w-6 h-6 text-yellow-600\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                    <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M7 7h.01M7 3h5c.512 0 1.024.195 1.414.586l7 7a2 2 0 010 2.828l-7 7a2 2 0 01-2.828 0l-7-7A1.994 1.994 0 013 12V7a4 4 0 014-4z\"></path>\n                </svg>\n            </div>\n            <div class=\"ml-4\">\n                <p class=\"text-sm font-medium text-gray-600\">\n                    @if($user->role === 'admin') All Tags @else My Tags @endif\n                </p>\n                <p class=\"text-2xl font-bold text-gray-900\">\n                    @if($user->role === 'admin')\n                        {{ App\\Models\\Tag::count() }}\n                    @else\n                        {{ App\\Models\\Tag::where('created_by', $user->id)->count() }}\n                    @endif\n                </p>\n            </div>\n        </div>\n    </div>\n</div>\n\n<div class=\"bg-white rounded-lg shadow\">\n    <div class=\"p-6\">\n        <h2 class=\"text-lg font-medium text-gray-900 mb-4\">Quick Actions</h2>\n        <div class=\"grid grid-cols-1 md:grid-cols-3 gap-4\">\n            <a href=\"{{ route('dashboard.posts') }}\" class=\"block p-4 border border-gray-200 rounded-lg hover:bg-gray-50 transition duration-200\">\n                <h3 class=\"font-medium text-gray-900\">Manage Posts</h3>\n                <p class=\"text-sm text-gray-600 mt-1\">Create, edit, and manage your blog posts</p>\n            </a>\n            \n            <a href=\"{{ route('dashboard.tags') }}\" class=\"block p-4 border border-gray-200 rounded-lg hover:bg-gray-50 transition duration-200\">\n                <h3 class=\"font-medium text-gray-900\">Manage Tags</h3>\n                <p class=\"text-sm text-gray-600 mt-1\">Organize your content with tags</p>\n            </a>\n\n            @if($user->role === 'admin')\n            <a href=\"{{ route('dashboard.users') }}\" class=\"block p-4 border border-gray-200 rounded-lg hover:bg-gray-50 transition duration-200\">\n                <h3 class=\"font-medium text-gray-900\">Manage Users</h3>\n                <p class=\"text-sm text-gray-600 mt-1\">View and manage user accounts</p>\n            </a>\n            @endif\n        </div>\n    </div>\n</div>\n@endsection","size_bytes":5308},"resources/views/dashboard/posts/index.blade.php":{"content":"@extends('layouts.app')\n\n@section('title', 'Posts Management')\n\n@section('content')\n<div class=\"mb-6\">\n    <h1 class=\"text-2xl font-bold text-gray-900\">Posts Management</h1>\n    <p class=\"text-gray-600 mt-1\">\n        @if(Auth::user()->role === 'admin')\n            Manage all blog posts\n        @else\n            Manage your blog posts\n        @endif\n    </p>\n</div>\n\n<div class=\"bg-white rounded-lg shadow overflow-hidden\">\n    <div class=\"px-6 py-4 border-b border-gray-200\">\n        <h2 class=\"text-lg font-medium text-gray-900\">\n            @if(Auth::user()->role === 'admin') All Posts @else My Posts @endif\n        </h2>\n    </div>\n    \n    <div class=\"overflow-x-auto\">\n        <table class=\"min-w-full divide-y divide-gray-200\">\n            <thead class=\"bg-gray-50\">\n                <tr>\n                    <th class=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Title</th>\n                    <th class=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Author</th>\n                    <th class=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Category</th>\n                    <th class=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Status</th>\n                    <th class=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Views</th>\n                    <th class=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Date</th>\n                </tr>\n            </thead>\n            <tbody class=\"bg-white divide-y divide-gray-200\">\n                @forelse($posts as $post)\n                <tr>\n                    <td class=\"px-6 py-4 whitespace-nowrap\">\n                        <div class=\"text-sm font-medium text-gray-900\">{{ $post->title }}</div>\n                        <div class=\"text-sm text-gray-500\">{{ Str::limit($post->excerpt, 50) }}</div>\n                    </td>\n                    <td class=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500\">\n                        {{ $post->author->name ?? 'Unknown' }}\n                    </td>\n                    <td class=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500\">\n                        {{ $post->category->name ?? 'Uncategorized' }}\n                    </td>\n                    <td class=\"px-6 py-4 whitespace-nowrap\">\n                        <span class=\"inline-flex px-2 py-1 text-xs font-semibold rounded-full \n                            {{ $post->status === 'published' ? 'bg-green-100 text-green-800' : \n                               ($post->status === 'draft' ? 'bg-gray-100 text-gray-800' : 'bg-yellow-100 text-yellow-800') }}\">\n                            {{ ucfirst($post->status) }}\n                        </span>\n                    </td>\n                    <td class=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500\">\n                        {{ number_format($post->views) }}\n                    </td>\n                    <td class=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500\">\n                        {{ $post->created_at->format('M d, Y') }}\n                    </td>\n                </tr>\n                @empty\n                <tr>\n                    <td colspan=\"6\" class=\"px-6 py-4 text-center text-gray-500\">No posts found</td>\n                </tr>\n                @endforelse\n            </tbody>\n        </table>\n    </div>\n    \n    @if($posts->hasPages())\n    <div class=\"px-6 py-4 border-t border-gray-200\">\n        {{ $posts->links() }}\n    </div>\n    @endif\n</div>\n@endsection","size_bytes":3596},"resources/views/dashboard/tags/index.blade.php":{"content":"@extends('layouts.app')\n\n@section('title', 'Tags Management')\n\n@section('content')\n<div class=\"mb-6\">\n    <h1 class=\"text-2xl font-bold text-gray-900\">Tags Management</h1>\n    <p class=\"text-gray-600 mt-1\">\n        @if(Auth::user()->role === 'admin')\n            Manage all content tags\n        @else\n            Manage your content tags\n        @endif\n    </p>\n</div>\n\n<div class=\"bg-white rounded-lg shadow overflow-hidden\">\n    <div class=\"px-6 py-4 border-b border-gray-200\">\n        <h2 class=\"text-lg font-medium text-gray-900\">\n            @if(Auth::user()->role === 'admin') All Tags @else My Tags @endif\n        </h2>\n    </div>\n    \n    <div class=\"overflow-x-auto\">\n        <table class=\"min-w-full divide-y divide-gray-200\">\n            <thead class=\"bg-gray-50\">\n                <tr>\n                    <th class=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Name</th>\n                    <th class=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Slug</th>\n                    <th class=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Created By</th>\n                    <th class=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Posts Count</th>\n                    <th class=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Created</th>\n                </tr>\n            </thead>\n            <tbody class=\"bg-white divide-y divide-gray-200\">\n                @forelse($tags as $tag)\n                <tr>\n                    <td class=\"px-6 py-4 whitespace-nowrap\">\n                        <div class=\"text-sm font-medium text-gray-900\">{{ $tag->name }}</div>\n                        @if($tag->description)\n                        <div class=\"text-sm text-gray-500\">{{ Str::limit($tag->description, 50) }}</div>\n                        @endif\n                    </td>\n                    <td class=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500\">\n                        {{ $tag->slug }}\n                    </td>\n                    <td class=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500\">\n                        {{ $tag->creator->name ?? 'Unknown' }}\n                    </td>\n                    <td class=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500\">\n                        {{ $tag->posts_count ?? 0 }}\n                    </td>\n                    <td class=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500\">\n                        {{ $tag->created_at->format('M d, Y') }}\n                    </td>\n                </tr>\n                @empty\n                <tr>\n                    <td colspan=\"5\" class=\"px-6 py-4 text-center text-gray-500\">No tags found</td>\n                </tr>\n                @endforelse\n            </tbody>\n        </table>\n    </div>\n    \n    @if($tags->hasPages())\n    <div class=\"px-6 py-4 border-t border-gray-200\">\n        {{ $tags->links() }}\n    </div>\n    @endif\n</div>\n@endsection","size_bytes":3024},"resources/views/dashboard/users/index.blade.php":{"content":"@extends('layouts.app')\n\n@section('title', 'Users Management')\n\n@section('content')\n<div class=\"mb-6\">\n    <h1 class=\"text-2xl font-bold text-gray-900\">Users Management</h1>\n    <p class=\"text-gray-600 mt-1\">Manage all user accounts and permissions</p>\n</div>\n\n<div class=\"bg-white rounded-lg shadow overflow-hidden\">\n    <div class=\"px-6 py-4 border-b border-gray-200\">\n        <h2 class=\"text-lg font-medium text-gray-900\">All Users</h2>\n    </div>\n    \n    <div class=\"overflow-x-auto\">\n        <table class=\"min-w-full divide-y divide-gray-200\">\n            <thead class=\"bg-gray-50\">\n                <tr>\n                    <th class=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">User</th>\n                    <th class=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Role</th>\n                    <th class=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Status</th>\n                    <th class=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Joined</th>\n                </tr>\n            </thead>\n            <tbody class=\"bg-white divide-y divide-gray-200\">\n                @forelse($users as $user)\n                <tr>\n                    <td class=\"px-6 py-4 whitespace-nowrap\">\n                        <div class=\"flex items-center\">\n                            <div class=\"flex-shrink-0 h-10 w-10\">\n                                <div class=\"h-10 w-10 rounded-full bg-gray-300 flex items-center justify-center\">\n                                    <span class=\"text-sm font-medium text-gray-700\">{{ substr($user->name, 0, 1) }}</span>\n                                </div>\n                            </div>\n                            <div class=\"ml-4\">\n                                <div class=\"text-sm font-medium text-gray-900\">{{ $user->name }}</div>\n                                <div class=\"text-sm text-gray-500\">{{ $user->email }}</div>\n                            </div>\n                        </div>\n                    </td>\n                    <td class=\"px-6 py-4 whitespace-nowrap\">\n                        <span class=\"inline-flex px-2 py-1 text-xs font-semibold rounded-full {{ $user->role === 'admin' ? 'bg-purple-100 text-purple-800' : 'bg-blue-100 text-blue-800' }}\">\n                            {{ ucfirst($user->role) }}\n                        </span>\n                    </td>\n                    <td class=\"px-6 py-4 whitespace-nowrap\">\n                        <span class=\"inline-flex px-2 py-1 text-xs font-semibold rounded-full {{ $user->status === 'active' ? 'bg-green-100 text-green-800' : 'bg-red-100 text-red-800' }}\">\n                            {{ ucfirst($user->status) }}\n                        </span>\n                    </td>\n                    <td class=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500\">\n                        {{ $user->created_at->format('M d, Y') }}\n                    </td>\n                </tr>\n                @empty\n                <tr>\n                    <td colspan=\"4\" class=\"px-6 py-4 text-center text-gray-500\">No users found</td>\n                </tr>\n                @endforelse\n            </tbody>\n        </table>\n    </div>\n    \n    @if($users->hasPages())\n    <div class=\"px-6 py-4 border-t border-gray-200\">\n        {{ $users->links() }}\n    </div>\n    @endif\n</div>\n@endsection","size_bytes":3419},"resources/views/layouts/dashboard.blade.php":{"content":"<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>@yield('title', 'Dashboard') - {{ config('app.name') }}</title>\n    @vite(['resources/css/app.css', 'resources/js/app.js'])\n</head>\n<body class=\"bg-gray-100\">\n    <div class=\"flex h-screen\">\n        <!-- Sidebar -->\n        <aside class=\"w-64 bg-white shadow-lg\">\n            <div class=\"p-6\">\n                <h2 class=\"text-xl font-bold text-gray-900\">{{ config('app.name') }}</h2>\n                <p class=\"text-sm text-gray-600 mt-1\">Welcome, {{ Auth::user()->name }}!</p>\n                <span class=\"inline-block bg-blue-100 text-blue-800 text-xs px-2 py-1 rounded-full mt-2\">\n                    {{ ucfirst(Auth::user()->role) }}\n                </span>\n            </div>\n            \n            <nav class=\"mt-6\">\n                <div class=\"px-6 py-2\">\n                    <a href=\"{{ route('dashboard') }}\" class=\"flex items-center px-4 py-2 text-gray-700 rounded-lg {{ request()->routeIs('dashboard') ? 'bg-blue-100 text-blue-700' : 'hover:bg-gray-100' }}\">\n                        <svg class=\"w-5 h-5 mr-3\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                            <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M3 7v10a2 2 0 002 2h14a2 2 0 002-2V9a2 2 0 00-2-2H5a2 2 0 00-2-2z\"></path>\n                        </svg>\n                        Dashboard\n                    </a>\n                </div>\n\n                @if(Auth::user()->role === 'admin')\n                <div class=\"px-6 py-2\">\n                    <h3 class=\"text-xs font-semibold text-gray-500 uppercase tracking-wider\">Admin</h3>\n                    <div class=\"mt-2 space-y-1\">\n                        <a href=\"{{ route('dashboard.users') }}\" class=\"flex items-center px-4 py-2 text-gray-700 rounded-lg {{ request()->routeIs('dashboard.users') ? 'bg-blue-100 text-blue-700' : 'hover:bg-gray-100' }}\">\n                            <svg class=\"w-5 h-5 mr-3\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                                <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M12 4.354a4 4 0 110 5.292M15 21H3v-1a6 6 0 0112 0v1zm0 0h6v-1a6 6 0 00-9-5.197m13.5-.5a3 3 0 11-6 0 3 3 0 016 0z\"></path>\n                            </svg>\n                            Users\n                        </a>\n                        <a href=\"{{ route('dashboard.categories') }}\" class=\"flex items-center px-4 py-2 text-gray-700 rounded-lg {{ request()->routeIs('dashboard.categories') ? 'bg-blue-100 text-blue-700' : 'hover:bg-gray-100' }}\">\n                            <svg class=\"w-5 h-5 mr-3\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                                <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M19 11H5m14-7H3a2 2 0 00-2 2v14a2 2 0 002 2h16a2 2 0 002-2V6a2 2 0 00-2-2z\"></path>\n                            </svg>\n                            Categories\n                        </a>\n                    </div>\n                </div>\n                @endif\n\n                <div class=\"px-6 py-2 mt-4\">\n                    <h3 class=\"text-xs font-semibold text-gray-500 uppercase tracking-wider\">Content</h3>\n                    <div class=\"mt-2 space-y-1\">\n                        <a href=\"{{ route('dashboard.posts') }}\" class=\"flex items-center px-4 py-2 text-gray-700 rounded-lg {{ request()->routeIs('dashboard.posts*') ? 'bg-blue-100 text-blue-700' : 'hover:bg-gray-100' }}\">\n                            <svg class=\"w-5 h-5 mr-3\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                                <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M9 12h6m-6 4h6m2 5H7a2 2 0 01-2-2V5a2 2 0 012-2h5.586a1 1 0 01.707.293l5.414 5.414a1 1 0 01.293.707V19a2 2 0 01-2 2z\"></path>\n                            </svg>\n                            Posts\n                        </a>\n                        <a href=\"{{ route('dashboard.tags') }}\" class=\"flex items-center px-4 py-2 text-gray-700 rounded-lg {{ request()->routeIs('dashboard.tags*') ? 'bg-blue-100 text-blue-700' : 'hover:bg-gray-100' }}\">\n                            <svg class=\"w-5 h-5 mr-3\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                                <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M7 7h.01M7 3h5c.512 0 1.024.195 1.414.586l7 7a2 2 0 010 2.828l-7 7a2 2 0 01-2.828 0l-7-7A1.994 1.994 0 013 12V7a4 4 0 014-4z\"></path>\n                            </svg>\n                            Tags\n                        </a>\n                    </div>\n                </div>\n\n                <div class=\"px-6 py-2 mt-8 border-t pt-4\">\n                    <form method=\"POST\" action=\"{{ route('logout') }}\">\n                        @csrf\n                        <button type=\"submit\" class=\"flex items-center px-4 py-2 text-gray-700 rounded-lg hover:bg-gray-100 w-full text-left\">\n                            <svg class=\"w-5 h-5 mr-3\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                                <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M17 16l4-4m0 0l-4-4m4 4H7m6 4v1a3 3 0 01-3 3H6a3 3 0 01-3-3V7a3 3 0 013-3h4a3 3 0 013 3v1\"></path>\n                            </svg>\n                            Logout\n                        </button>\n                    </form>\n                </div>\n            </nav>\n        </aside>\n\n        <!-- Main Content -->\n        <main class=\"flex-1 overflow-y-auto\">\n            <div class=\"p-6\">\n                @yield('content')\n            </div>\n        </main>\n    </div>\n</body>\n</html>","size_bytes":5719},"app/Http/Controllers/WelcomeController.php":{"content":"<?php\n\nnamespace App\\Http\\Controllers;\n\nuse Illuminate\\Http\\Request;\nuse App\\Models\\Post;\n\nclass WelcomeController extends Controller\n{\n    public function index()\n    {\n        $posts = Post::with(['author', 'category', 'tags'])\n            ->where('status', 'published')\n            ->orderBy('published_at', 'desc')\n            ->paginate(9);\n            \n        return view('welcome', compact('posts'));\n    }\n\n    public function show($slug)\n    {\n        $post = Post::with(['author', 'category', 'tags'])\n            ->where('slug', $slug)\n            ->where('status', 'published')\n            ->firstOrFail();\n            \n        // Increment view count\n        $post->increment('views');\n        \n        // Get related posts\n        $relatedPosts = Post::with(['author', 'category'])\n            ->where('status', 'published')\n            ->where('category_id', $post->category_id)\n            ->where('id', '!=', $post->id)\n            ->limit(3)\n            ->get();\n        \n        return view('post.show', compact('post', 'relatedPosts'));\n    }\n}","size_bytes":1065},"database/seeders/PostSeeder.php":{"content":"<?php\n\nnamespace Database\\Seeders;\n\nuse Illuminate\\Database\\Console\\Seeds\\WithoutModelEvents;\nuse Illuminate\\Database\\Seeder;\nuse App\\Models\\Post;\nuse App\\Models\\User;\nuse App\\Models\\Category;\nuse App\\Models\\Tag;\n\nclass PostSeeder extends Seeder\n{\n    /**\n     * Run the database seeds.\n     */\n    public function run(): void\n    {\n        // Get users and create category first\n        $adminUser = User::where('email', 'admin@example.com')->first();\n        $regularUser = User::where('email', 'user@example.com')->first();\n        \n        // Create categories\n        $techCategory = Category::create([\n            'name' => 'Technology',\n            'slug' => 'technology',\n            'description' => 'Latest technology trends and insights',\n            'created_by' => $adminUser->id\n        ]);\n        \n        $businessCategory = Category::create([\n            'name' => 'Business',\n            'slug' => 'business', \n            'description' => 'Business strategies and market insights',\n            'created_by' => $adminUser->id\n        ]);\n        \n        // Create tags\n        $webTag = Tag::create([\n            'name' => 'Web Development',\n            'slug' => 'web-development',\n            'description' => 'Web development tutorials and tips',\n            'created_by' => $adminUser->id\n        ]);\n        \n        $laravelTag = Tag::create([\n            'name' => 'Laravel',\n            'slug' => 'laravel',\n            'description' => 'Laravel framework tutorials',\n            'created_by' => $adminUser->id\n        ]);\n        \n        $startupTag = Tag::create([\n            'name' => 'Startup',\n            'slug' => 'startup',\n            'description' => 'Startup insights and advice',\n            'created_by' => $regularUser->id\n        ]);\n        \n        // Create sample posts\n        $post1 = Post::create([\n            'title' => 'Getting Started with Laravel 12: A Complete Guide',\n            'slug' => 'getting-started-laravel-12-complete-guide',\n            'excerpt' => 'Learn how to build modern web applications with Laravel 12. This comprehensive guide covers everything from installation to deployment.',\n            'content' => \"# Getting Started with Laravel 12: A Complete Guide\n\nLaravel 12 brings exciting new features and improvements that make web development even more enjoyable. In this comprehensive guide, we'll explore everything you need to know to get started with Laravel 12.\n\n## What's New in Laravel 12\n\nLaravel 12 introduces several groundbreaking features:\n\n- **Enhanced Performance**: Up to 30% faster response times\n- **Improved Eloquent ORM**: Better relationship handling and query optimization\n- **Advanced Blade Components**: More powerful and flexible templating\n- **Built-in Authentication**: Streamlined auth system with role-based access\n\n## Installation\n\nGetting started with Laravel 12 is easier than ever:\n\n```bash\ncomposer create-project laravel/laravel my-app\ncd my-app\nphp artisan serve\n```\n\n## Key Features\n\n### 1. Eloquent Relationships\nLaravel's Eloquent ORM makes database relationships intuitive:\n\n```php\nclass User extends Model\n{\n    public function posts()\n    {\n        return \\$this->hasMany(Post::class);\n    }\n}\n```\n\n### 2. Blade Templating\nCreate beautiful, maintainable templates:\n\n```php\n@extends('layouts.app')\n\n@section('content')\n    <h1>{{ \\$title }}</h1>\n    <p>{{ \\$content }}</p>\n@endsection\n```\n\n### 3. Artisan Commands\nPowerful CLI for rapid development:\n\n```bash\nphp artisan make:controller PostController\nphp artisan make:model Post -m\nphp artisan migrate\n```\n\n## Best Practices\n\n1. **Follow MVC Pattern**: Keep your code organized\n2. **Use Service Classes**: Extract business logic\n3. **Implement Caching**: Improve performance\n4. **Write Tests**: Ensure code quality\n\n## Conclusion\n\nLaravel 12 is the perfect framework for building modern web applications. With its elegant syntax, powerful features, and extensive ecosystem, you'll be building amazing applications in no time.\n\nStart your Laravel journey today and join millions of developers who trust Laravel for their web development needs!\",\n            'author_id' => $adminUser->id,\n            'category_id' => $techCategory->id,\n            'status' => 'published',\n            'views' => 1250,\n            'published_at' => now()->subDays(2),\n        ]);\n        \n        $post2 = Post::create([\n            'title' => 'Building Modern Web Applications with Bootstrap 5',\n            'slug' => 'building-modern-web-applications-bootstrap-5',\n            'excerpt' => 'Discover how Bootstrap 5 revolutionizes front-end development with its utility-first approach and improved components.',\n            'content' => \"# Building Modern Web Applications with Bootstrap 5\n\nBootstrap 5 has transformed how we approach front-end development. With its utility-first classes and improved component system, creating responsive, beautiful web applications has never been easier.\n\n## Why Bootstrap 5?\n\nBootstrap 5 brings several key improvements:\n\n- **Utility Classes**: Rapid prototyping and styling\n- **Custom CSS Properties**: Better theming support\n- **Improved Grid System**: More flexible layouts\n- **No jQuery Dependency**: Lighter and faster\n\n## Getting Started\n\nInclude Bootstrap 5 in your project:\n\n```html\n<link href=\\\"https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css\\\" rel=\\\"stylesheet\\\">\n<script src=\\\"https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js\\\"></script>\n```\n\n## Key Components\n\n### 1. Cards\nCreate beautiful content containers:\n\n```html\n<div class=\\\"card\\\">\n    <div class=\\\"card-body\\\">\n        <h5 class=\\\"card-title\\\">Card Title</h5>\n        <p class=\\\"card-text\\\">Some quick example text.</p>\n        <a href=\\\"#\\\" class=\\\"btn btn-primary\\\">Go somewhere</a>\n    </div>\n</div>\n```\n\n### 2. Navigation\nBuild responsive navigation bars:\n\n```html\n<nav class=\\\"navbar navbar-expand-lg navbar-light bg-light\\\">\n    <div class=\\\"container-fluid\\\">\n        <a class=\\\"navbar-brand\\\" href=\\\"#\\\">Navbar</a>\n        <button class=\\\"navbar-toggler\\\" type=\\\"button\\\">\n            <span class=\\\"navbar-toggler-icon\\\"></span>\n        </button>\n    </div>\n</nav>\n```\n\n### 3. Forms\nCreate accessible, styled forms:\n\n```html\n<div class=\\\"mb-3\\\">\n    <label for=\\\"email\\\" class=\\\"form-label\\\">Email</label>\n    <input type=\\\"email\\\" class=\\\"form-control\\\" id=\\\"email\\\">\n</div>\n```\n\n## Utility Classes\n\nBootstrap 5's utility classes make styling effortless:\n\n- **Spacing**: `m-3`, `p-4`, `mx-auto`\n- **Colors**: `text-primary`, `bg-success`\n- **Flexbox**: `d-flex`, `justify-content-center`\n- **Typography**: `fs-1`, `fw-bold`\n\n## Responsive Design\n\nBootstrap's grid system adapts to any screen size:\n\n```html\n<div class=\\\"row\\\">\n    <div class=\\\"col-md-8\\\">Main content</div>\n    <div class=\\\"col-md-4\\\">Sidebar</div>\n</div>\n```\n\n## Conclusion\n\nBootstrap 5 empowers developers to create stunning, responsive web applications quickly and efficiently. Its comprehensive component library and utility classes make it the perfect choice for modern web development.\n\nStart building amazing interfaces with Bootstrap 5 today!\",\n            'author_id' => $regularUser->id,\n            'category_id' => $techCategory->id,\n            'status' => 'published',\n            'views' => 890,\n            'published_at' => now()->subDays(5),\n        ]);\n        \n        $post3 = Post::create([\n            'title' => 'The Future of Remote Work: Trends and Technologies',\n            'slug' => 'future-remote-work-trends-technologies',\n            'excerpt' => 'Explore how remote work is evolving and the technologies that are shaping the future of distributed teams.',\n            'content' => \"# The Future of Remote Work: Trends and Technologies\n\nThe landscape of work has fundamentally changed. Remote work, once considered a perk, has become a necessity and preference for millions of professionals worldwide.\n\n## The Remote Work Revolution\n\nThe shift to remote work has accelerated digital transformation across industries:\n\n- **Increased Productivity**: 77% of remote workers report higher productivity\n- **Better Work-Life Balance**: Flexible schedules improve employee satisfaction\n- **Global Talent Access**: Companies can hire the best talent regardless of location\n- **Reduced Costs**: Lower overhead and operational expenses\n\n## Essential Technologies\n\n### 1. Communication Platforms\nModern teams rely on sophisticated communication tools:\n\n- **Video Conferencing**: Zoom, Microsoft Teams, Google Meet\n- **Instant Messaging**: Slack, Discord, Microsoft Teams\n- **Asynchronous Communication**: Loom, Notion, Confluence\n\n### 2. Project Management\nKeeping distributed teams aligned requires robust project management:\n\n- **Task Management**: Trello, Asana, Monday.com\n- **Agile Tools**: Jira, Azure DevOps, Linear\n- **Time Tracking**: Toggl, RescueTime, Clockify\n\n### 3. Cloud Infrastructure\nRemote work depends on reliable cloud services:\n\n- **File Storage**: Google Drive, Dropbox, OneDrive\n- **Development**: GitHub, GitLab, AWS\n- **Security**: VPNs, Multi-factor Authentication, Zero Trust\n\n## Emerging Trends\n\n### Virtual Reality Workspaces\nVR technology is creating immersive work environments:\n\n- **Virtual Offices**: Horizon Workrooms, Spatial\n- **3D Collaboration**: Immersive design reviews and meetings\n- **Training Simulations**: Safe, scalable employee training\n\n### AI-Powered Assistance\nArtificial intelligence is enhancing remote work productivity:\n\n- **Smart Scheduling**: AI-optimized meeting times\n- **Automated Transcription**: Real-time meeting notes\n- **Intelligent Insights**: Performance and productivity analytics\n\n### Hybrid Work Models\nThe future combines the best of both worlds:\n\n- **Flexible Schedules**: Choose when and where to work\n- **Hot Desking**: Shared office spaces when needed\n- **Digital-First Culture**: Remote-friendly processes\n\n## Challenges and Solutions\n\n### 1. Communication Gaps\n**Challenge**: Miscommunication and isolation\n**Solution**: Regular check-ins, clear documentation, video-first meetings\n\n### 2. Cybersecurity Risks\n**Challenge**: Increased security vulnerabilities\n**Solution**: Zero-trust architecture, VPN access, security training\n\n### 3. Work-Life Balance\n**Challenge**: Blurred boundaries between work and personal life\n**Solution**: Set clear boundaries, dedicated workspace, regular breaks\n\n## Building Remote Culture\n\nSuccessful remote organizations focus on:\n\n- **Trust and Autonomy**: Outcome-based performance metrics\n- **Inclusive Meetings**: Ensure all voices are heard\n- **Virtual Team Building**: Online events and activities\n- **Continuous Learning**: Skill development opportunities\n\n## The Road Ahead\n\nRemote work will continue evolving with:\n\n- **Advanced Collaboration Tools**: More immersive and intuitive platforms\n- **Improved Security**: Better protection for distributed workforces\n- **Wellness Technology**: Tools supporting mental and physical health\n- **Sustainable Practices**: Reduced commuting and office space\n\n## Conclusion\n\nThe future of work is flexible, technology-driven, and globally connected. Organizations that embrace remote work technologies and culture will attract top talent and achieve sustainable growth.\n\nThe remote work revolution is just beginning, and the possibilities are limitless!\",\n            'author_id' => $adminUser->id,\n            'category_id' => $businessCategory->id,\n            'status' => 'published',\n            'views' => 654,\n            'published_at' => now()->subDays(7),\n        ]);\n        \n        // Attach tags to posts\n        $post1->tags()->attach([$webTag->id, $laravelTag->id]);\n        $post2->tags()->attach([$webTag->id]);\n        $post3->tags()->attach([$startupTag->id]);\n    }\n}","size_bytes":11751},"resources/views/dashboard/app.blade.php":{"content":"@extends('layouts.app')\n\n@section('title', 'Dashboard')\n\n@section('content')\n<!-- Welcome Section -->\n<div class=\"row mb-4\">\n    <div class=\"col-12\">\n        <div class=\"welcome-section\">\n            <div class=\"row align-items-center\">\n                <div class=\"col-md-6\">\n                    <h2 class=\"mb-2\">Welcome {{ Auth::user()->name }}</h2>\n                    <p class=\"text-muted mb-0\">\n                        @if(Auth::user()->role === 'admin')\n                            Admin Dashboard - Manage your system and content\n                        @else\n                            User Dashboard - Manage your content and profile\n                        @endif\n                    </p>\n                </div>\n                <div class=\"col-md-6 text-end\">\n                    <div class=\"dropdown\">\n                        <button class=\"btn btn-outline-secondary dropdown-toggle\" type=\"button\" data-bs-toggle=\"dropdown\">\n                            <i class=\"bi bi-calendar3 me-2\"></i>{{ now()->format('M d, Y') }}\n                        </button>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>\n\n<!-- Stats Cards Row -->\n<div class=\"row mb-4\">\n    <!-- Main Illustration Card -->\n    <div class=\"col-lg-5 mb-4\">\n        <div class=\"card main-card h-100\">\n            <div class=\"card-body position-relative\">\n                <div class=\"d-flex align-items-center mb-3\">\n                    <i class=\"bi bi-person-circle text-primary me-2\" style=\"font-size: 2rem;\"></i>\n                    <div>\n                        <div class=\"fw-bold\">{{ Auth::user()->name }}</div>\n                        <div class=\"text-muted small\">{{ ucfirst(Auth::user()->role) }} User</div>\n                    </div>\n                </div>\n                \n                <!-- Illustration placeholder -->\n                <div class=\"illustration-area text-center\">\n                    <div class=\"illustration-placeholder\">\n                        @if(Auth::user()->role === 'admin')\n                            <i class=\"bi bi-shield-check text-danger\" style=\"font-size: 4rem;\"></i>\n                            <p class=\"text-muted mt-2\">Admin Control Panel</p>\n                        @else\n                            <i class=\"bi bi-file-earmark-text text-primary\" style=\"font-size: 4rem;\"></i>\n                            <p class=\"text-muted mt-2\">Content Management</p>\n                        @endif\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n\n    <!-- Stats Cards -->\n    <div class=\"col-lg-7\">\n        <div class=\"row h-100\">\n            @if(Auth::user()->role === 'admin')\n            <div class=\"col-md-6 mb-4\">\n                <div class=\"card stat-card stat-card-blue h-100\">\n                    <div class=\"card-body\">\n                        <h6 class=\"card-subtitle mb-2 text-white-50\">Total Users</h6>\n                        <h2 class=\"card-title text-white mb-2\">{{ $totalUsers ?? 0 }}</h2>\n                        <small class=\"text-white-50\">Registered users</small>\n                    </div>\n                </div>\n            </div>\n            <div class=\"col-md-6 mb-4\">\n                <div class=\"card stat-card stat-card-purple h-100\">\n                    <div class=\"card-body\">\n                        <h6 class=\"card-subtitle mb-2 text-white-50\">Total Posts</h6>\n                        <h2 class=\"card-title text-white mb-2\">{{ $totalPosts ?? 0 }}</h2>\n                        <small class=\"text-white-50\">All content</small>\n                    </div>\n                </div>\n            </div>\n            <div class=\"col-md-6 mb-4\">\n                <div class=\"card stat-card stat-card-indigo h-100\">\n                    <div class=\"card-body\">\n                        <h6 class=\"card-subtitle mb-2 text-white-50\">Categories</h6>\n                        <h2 class=\"card-title text-white mb-2\">{{ $totalCategories ?? 0 }}</h2>\n                        <small class=\"text-white-50\">Content categories</small>\n                    </div>\n                </div>\n            </div>\n            <div class=\"col-md-6 mb-4\">\n                <div class=\"card stat-card stat-card-orange h-100\">\n                    <div class=\"card-body\">\n                        <h6 class=\"card-subtitle mb-2 text-white-50\">Total Tags</h6>\n                        <h2 class=\"card-title text-white mb-2\">{{ $totalTags ?? 0 }}</h2>\n                        <small class=\"text-white-50\">All tags</small>\n                    </div>\n                </div>\n            </div>\n            @else\n            <div class=\"col-md-6 mb-4\">\n                <div class=\"card stat-card stat-card-blue h-100\">\n                    <div class=\"card-body\">\n                        <h6 class=\"card-subtitle mb-2 text-white-50\">My Posts</h6>\n                        <h2 class=\"card-title text-white mb-2\">{{ $myPosts ?? 0 }}</h2>\n                        <small class=\"text-white-50\">Your content</small>\n                    </div>\n                </div>\n            </div>\n            <div class=\"col-md-6 mb-4\">\n                <div class=\"card stat-card stat-card-purple h-100\">\n                    <div class=\"card-body\">\n                        <h6 class=\"card-subtitle mb-2 text-white-50\">My Tags</h6>\n                        <h2 class=\"card-title text-white mb-2\">{{ $myTags ?? 0 }}</h2>\n                        <small class=\"text-white-50\">Your tags</small>\n                    </div>\n                </div>\n            </div>\n            <div class=\"col-md-6 mb-4\">\n                <div class=\"card stat-card stat-card-indigo h-100\">\n                    <div class=\"card-body\">\n                        <h6 class=\"card-subtitle mb-2 text-white-50\">Draft Posts</h6>\n                        <h2 class=\"card-title text-white mb-2\">{{ $draftPosts ?? 0 }}</h2>\n                        <small class=\"text-white-50\">Unpublished</small>\n                    </div>\n                </div>\n            </div>\n            <div class=\"col-md-6 mb-4\">\n                <div class=\"card stat-card stat-card-orange h-100\">\n                    <div class=\"card-body\">\n                        <h6 class=\"card-subtitle mb-2 text-white-50\">Published Posts</h6>\n                        <h2 class=\"card-title text-white mb-2\">{{ $publishedPosts ?? 0 }}</h2>\n                        <small class=\"text-white-50\">Live content</small>\n                    </div>\n                </div>\n            </div>\n            @endif\n        </div>\n    </div>\n</div>\n\n<!-- Bottom Section -->\n<div class=\"row\">\n    <div class=\"col-md-6 mb-4\">\n        <div class=\"card\">\n            <div class=\"card-body\">\n                <div class=\"d-flex justify-content-between align-items-center mb-3\">\n                    <h5 class=\"card-title mb-0\">Recent Activity</h5>\n                    <i class=\"bi bi-activity text-primary\"></i>\n                </div>\n                <div class=\"activity-list\">\n                    <div class=\"activity-item mb-3\">\n                        <div class=\"d-flex justify-content-between\">\n                            <span class=\"text-muted\">Login</span>\n                            <span class=\"fw-bold\">{{ Auth::user()->updated_at->diffForHumans() }}</span>\n                        </div>\n                    </div>\n                    <div class=\"activity-item mb-3\">\n                        <div class=\"d-flex justify-content-between\">\n                            <span class=\"text-muted\">Account Created</span>\n                            <span class=\"fw-bold\">{{ Auth::user()->created_at->format('M d, Y') }}</span>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n    \n    <div class=\"col-md-6 mb-4\">\n        <div class=\"card\">\n            <div class=\"card-body\">\n                <div class=\"d-flex justify-content-between align-items-center mb-3\">\n                    <h5 class=\"card-title mb-0\">Quick Actions</h5>\n                    <i class=\"bi bi-lightning text-warning\"></i>\n                </div>\n                <div class=\"quick-actions\">\n                    <div class=\"d-grid gap-2\">\n                        @if(Auth::user()->role === 'admin')\n                        <a href=\"{{ route('dashboard.users') }}\" class=\"btn btn-outline-primary\">\n                            <i class=\"bi bi-people me-2\"></i>Manage Users\n                        </a>\n                        <a href=\"{{ route('dashboard.categories') }}\" class=\"btn btn-outline-secondary\">\n                            <i class=\"bi bi-folder me-2\"></i>Manage Categories\n                        </a>\n                        @endif\n                        <a href=\"{{ route('dashboard.posts') }}\" class=\"btn btn-outline-info\">\n                            <i class=\"bi bi-file-earmark-text me-2\"></i>Manage Posts\n                        </a>\n                        <a href=\"{{ route('dashboard.tags') }}\" class=\"btn btn-outline-success\">\n                            <i class=\"bi bi-tags me-2\"></i>Manage Tags\n                        </a>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>\n@endsection","size_bytes":9187},"resources/views/post/show.blade.php":{"content":"<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>{{ $post->title }} - {{ config('app.name') }}</title>\n    \n    <!-- Bootstrap 5 CSS CDN -->\n    <link href=\"https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css\" rel=\"stylesheet\">\n    \n    <!-- Bootstrap Icons -->\n    <link href=\"https://cdn.jsdelivr.net/npm/bootstrap-icons@1.10.0/font/bootstrap-icons.css\" rel=\"stylesheet\">\n    \n    @vite(['resources/css/app.css', 'resources/js/app.js'])\n    \n    <style>\n        .post-content {\n            line-height: 1.8;\n        }\n        .post-content h1, .post-content h2, .post-content h3 {\n            margin-top: 2rem;\n            margin-bottom: 1rem;\n        }\n        .post-content pre {\n            background-color: #f8f9fa;\n            padding: 1rem;\n            border-radius: 0.5rem;\n            overflow-x: auto;\n        }\n        .post-content code {\n            background-color: #f8f9fa;\n            padding: 0.2rem 0.4rem;\n            border-radius: 0.25rem;\n            font-size: 0.9em;\n        }\n        .post-content blockquote {\n            border-left: 4px solid #0d6efd;\n            padding-left: 1rem;\n            margin: 1.5rem 0;\n            font-style: italic;\n        }\n    </style>\n</head>\n<body>\n    <!-- Navigation -->\n    <nav class=\"navbar navbar-expand-lg navbar-light bg-white shadow-sm\">\n        <div class=\"container\">\n            <a class=\"navbar-brand fw-bold\" href=\"{{ url('/') }}\">\n                <i class=\"bi bi-journal-richtext text-primary me-2\"></i>\n                {{ config('app.name') }}\n            </a>\n            \n            <button class=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarNav\">\n                <span class=\"navbar-toggler-icon\"></span>\n            </button>\n            \n            <div class=\"collapse navbar-collapse\" id=\"navbarNav\">\n                <ul class=\"navbar-nav me-auto\">\n                    <li class=\"nav-item\">\n                        <a class=\"nav-link\" href=\"{{ url('/') }}\">\n                            <i class=\"bi bi-arrow-left me-1\"></i>Back to Blog\n                        </a>\n                    </li>\n                </ul>\n                \n                <div class=\"d-flex\">\n                    @auth\n                        <a href=\"{{ route('dashboard') }}\" class=\"btn btn-outline-primary me-2\">\n                            <i class=\"bi bi-speedometer2 me-1\"></i>Dashboard\n                        </a>\n                        <form method=\"POST\" action=\"{{ route('logout') }}\" class=\"d-inline\">\n                            @csrf\n                            <button type=\"submit\" class=\"btn btn-outline-secondary\">\n                                <i class=\"bi bi-box-arrow-right me-1\"></i>Logout\n                            </button>\n                        </form>\n                    @else\n                        <a href=\"{{ route('login') }}\" class=\"btn btn-primary\">\n                            <i class=\"bi bi-box-arrow-in-right me-1\"></i>Login\n                        </a>\n                    @endauth\n                </div>\n            </div>\n        </div>\n    </nav>\n\n    <div class=\"container my-5\">\n        <div class=\"row\">\n            <!-- Main Content -->\n            <div class=\"col-lg-8\">\n                <!-- Post Header -->\n                <div class=\"mb-4\">\n                    <!-- Category -->\n                    @if($post->category)\n                    <div class=\"mb-3\">\n                        <span class=\"badge bg-primary rounded-pill\">{{ $post->category->name }}</span>\n                    </div>\n                    @endif\n                    \n                    <!-- Title -->\n                    <h1 class=\"display-5 fw-bold mb-3\">{{ $post->title }}</h1>\n                    \n                    <!-- Meta Information -->\n                    <div class=\"d-flex flex-wrap align-items-center text-muted mb-3\">\n                        <div class=\"me-4 mb-2\">\n                            <i class=\"bi bi-person me-1\"></i>{{ $post->author->name }}\n                        </div>\n                        <div class=\"me-4 mb-2\">\n                            <i class=\"bi bi-calendar me-1\"></i>{{ $post->published_at->format('F d, Y') }}\n                        </div>\n                        <div class=\"me-4 mb-2\">\n                            <i class=\"bi bi-eye me-1\"></i>{{ number_format($post->views) }} views\n                        </div>\n                        <div class=\"me-4 mb-2\">\n                            <i class=\"bi bi-clock me-1\"></i>{{ ceil(str_word_count(strip_tags($post->content)) / 200) }} min read\n                        </div>\n                    </div>\n                    \n                    <!-- Tags -->\n                    @if($post->tags->count() > 0)\n                    <div class=\"mb-4\">\n                        @foreach($post->tags as $tag)\n                        <span class=\"badge bg-light text-dark me-2 mb-1\">#{{ $tag->name }}</span>\n                        @endforeach\n                    </div>\n                    @endif\n                    \n                    <!-- Excerpt -->\n                    <div class=\"alert alert-light border-start border-primary border-4\">\n                        <p class=\"mb-0 lead\">{{ $post->excerpt }}</p>\n                    </div>\n                </div>\n                \n                <!-- Post Content -->\n                <div class=\"post-content\">\n                    {!! \\Illuminate\\Support\\Str::of($post->content)->markdown() !!}\n                </div>\n                \n                <!-- Social Sharing -->\n                <div class=\"border-top pt-4 mt-5\">\n                    <h5>Share this article</h5>\n                    <div class=\"d-flex gap-2\">\n                        <a href=\"https://twitter.com/intent/tweet?text={{ urlencode($post->title) }}&url={{ urlencode(request()->fullUrl()) }}\" \n                           target=\"_blank\" class=\"btn btn-outline-info\">\n                            <i class=\"bi bi-twitter me-1\"></i>Twitter\n                        </a>\n                        <a href=\"https://www.facebook.com/sharer/sharer.php?u={{ urlencode(request()->fullUrl()) }}\" \n                           target=\"_blank\" class=\"btn btn-outline-primary\">\n                            <i class=\"bi bi-facebook me-1\"></i>Facebook\n                        </a>\n                        <a href=\"https://www.linkedin.com/sharing/share-offsite/?url={{ urlencode(request()->fullUrl()) }}\" \n                           target=\"_blank\" class=\"btn btn-outline-info\">\n                            <i class=\"bi bi-linkedin me-1\"></i>LinkedIn\n                        </a>\n                        <button class=\"btn btn-outline-secondary\" onclick=\"copyToClipboard('{{ request()->fullUrl() }}')\">\n                            <i class=\"bi bi-link-45deg me-1\"></i>Copy Link\n                        </button>\n                    </div>\n                </div>\n            </div>\n            \n            <!-- Sidebar -->\n            <div class=\"col-lg-4\">\n                <!-- Author Info -->\n                <div class=\"card mb-4\">\n                    <div class=\"card-body text-center\">\n                        <div class=\"rounded-circle bg-primary d-flex align-items-center justify-content-center mx-auto mb-3\" style=\"width: 80px; height: 80px;\">\n                            <span class=\"text-white fw-bold fs-2\">{{ substr($post->author->name, 0, 1) }}</span>\n                        </div>\n                        <h5 class=\"card-title\">{{ $post->author->name }}</h5>\n                        @if($post->author->bio)\n                        <p class=\"card-text text-muted\">{{ $post->author->bio }}</p>\n                        @endif\n                    </div>\n                </div>\n                \n                <!-- Related Posts -->\n                @if($relatedPosts->count() > 0)\n                <div class=\"card\">\n                    <div class=\"card-header\">\n                        <h5 class=\"mb-0\">Related Articles</h5>\n                    </div>\n                    <div class=\"card-body\">\n                        @foreach($relatedPosts as $relatedPost)\n                        <div class=\"mb-3 {{ !$loop->last ? 'border-bottom pb-3' : '' }}\">\n                            <h6>\n                                <a href=\"{{ url('/post/' . $relatedPost->slug) }}\" class=\"text-decoration-none\">\n                                    {{ $relatedPost->title }}\n                                </a>\n                            </h6>\n                            <small class=\"text-muted\">\n                                By {{ $relatedPost->author->name }} • {{ $relatedPost->published_at->format('M d, Y') }}\n                            </small>\n                        </div>\n                        @endforeach\n                    </div>\n                </div>\n                @endif\n            </div>\n        </div>\n    </div>\n\n    <!-- Footer -->\n    <footer class=\"bg-dark text-white py-4 mt-5\">\n        <div class=\"container\">\n            <div class=\"row\">\n                <div class=\"col-md-6\">\n                    <h5>{{ config('app.name') }}</h5>\n                    <p class=\"mb-0\">Sharing knowledge and insights with the world.</p>\n                </div>\n                <div class=\"col-md-6 text-md-end\">\n                    <p class=\"mb-0\">&copy; {{ date('Y') }} {{ config('app.name') }}. All rights reserved.</p>\n                </div>\n            </div>\n        </div>\n    </footer>\n\n    <!-- Bootstrap 5 JS Bundle CDN -->\n    <script src=\"https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js\"></script>\n    \n    <script>\n        function copyToClipboard(text) {\n            navigator.clipboard.writeText(text).then(function() {\n                alert('Link copied to clipboard!');\n            });\n        }\n    </script>\n</body>\n</html>","size_bytes":9927}},"version":1}